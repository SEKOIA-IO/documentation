{"swagger": "2.0", "basePath": "/v1/sic", "paths": {"/alerts": {"post": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertCreationTaskStatusSchema"}}, "400": {"description": "Invalid parameters"}}, "summary": "Create an alert", "description": "The provided details determine the specifics of the alert to be created.\nThe alert creation process is executed asynchronously, and as a result,\nthis method returns the status of the creation task.\n\nThe following permissions are required:\n - \u201cManage alerts\u201d (`0e329f9c-173f-4fa0-bbbc-fcfc4bdf7559`)", "operationId": "post_alerts_resource", "parameters": [{"in": "query", "name": "uuid", "required": false, "type": "string", "description": "Optional UUID of the alert to create."}, {"in": "query", "name": "created_at", "required": false, "type": "string", "format": "date-time", "description": "Creation date of the alert"}, {"in": "query", "name": "community_uuid", "required": true, "type": "string", "description": "UUID of the community that owns the alert."}, {"in": "query", "name": "entity_uuid", "required": true, "type": "string", "description": "UUID of the entity associated to the alert."}, {"in": "query", "name": "entity_name", "required": true, "type": "string", "minLength": 3, "maxLength": 1000, "description": "Name of the entity."}, {"in": "query", "name": "rule_uuid", "required": true, "type": "string", "description": "UUID of the rule that detected the alert."}, {"in": "query", "name": "rule_name", "required": true, "type": "string", "minLength": 3, "maxLength": 1000, "description": "Name of the rule that detected the alert."}, {"in": "query", "name": "rule_pattern", "required": true, "type": "string", "minLength": 3, "maxLength": 100000, "description": "Pattern of the rule that detected the alert."}, {"in": "query", "name": "rule_description", "required": false, "type": "string", "x-nullable": true, "maxLength": 10000, "description": "Description of the rule that detected the alert."}, {"in": "query", "name": "rule_severity", "required": false, "type": "integer", "minimum": 0, "maximum": 100, "description": "The severity of the rule that detected the alert"}, {"in": "query", "name": "rule_type", "required": false, "type": "string", "x-nullable": true, "maxLength": 100, "description": "Type of the rule that detected the alert."}, {"in": "query", "name": "alert_type_category", "required": true, "type": "string", "minLength": 3, "maxLength": 1000, "description": "Category of the alert type."}, {"in": "query", "name": "alert_type_value", "required": true, "type": "string", "minLength": 3, "maxLength": 1000, "description": "Name of the alert type."}, {"in": "query", "name": "source", "required": false, "type": "string", "x-nullable": true, "description": "Source of the main event that triggered the alert."}, {"in": "query", "name": "target", "required": false, "type": "string", "x-nullable": true, "description": "Target of the main eventr that related the alert."}, {"in": "query", "name": "status_uuid", "required": false, "type": "string", "description": "UUID of the current status of the alert (default is '2efc4930-1442-4abb-acf2-58ba219a4fd0' ~ pending)."}, {"in": "query", "name": "urgency_value", "required": true, "type": "integer", "minimum": 0, "maximum": 100, "description": "Urgency of the alert."}, {"in": "query", "name": "urgency_severity", "required": true, "type": "integer", "minimum": 0, "maximum": 100, "description": "Severity of the alert."}, {"in": "query", "name": "urgency_criticity", "required": true, "type": "integer", "minimum": 0, "maximum": 100, "description": "Criticity of the alert."}, {"in": "query", "name": "urgency_display", "required": false, "type": "string", "description": "Human-friendly description of the alert urgency."}, {"in": "query", "name": "details", "required": false, "type": "string", "description": "Details of the alert."}, {"in": "query", "name": "similar", "required": false, "type": "integer", "minimum": 0, "maximum": 100, "description": "Number of similar alerts (default is 0)."}, {"in": "query", "name": "stix", "required": true, "type": "object", "description": "STIX bundle of the detection."}, {"in": "query", "name": "auto_validate", "required": false, "type": "boolean", "description": "If set, the alert is automatically validated after its creation."}, {"in": "query", "name": "kill_chain_short_id", "required": false, "type": "string", "x-nullable": true, "description": "The ID of the kill chain step this alert denotes"}, {"in": "query", "name": "intake_uuids", "required": false, "collectionFormat": "multi", "type": "array", "description": "Intake UUIDs", "items": {"type": "string", "format": "uuid"}}], "tags": ["Detection", "Alert"]}, "get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertsSchema"}}, "400": {"description": "Invalid parameters"}}, "summary": "List alerts", "description": "An alert denotes the sighting of one or more indicator given a set of events.\nThis paginated endpoint list all the alerts. A set of filters can be\nspecified to focus on certain alerts.\n\nThe following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)", "operationId": "get_alerts_resource", "parameters": [{"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Match alerts by their community uuids."}, {"in": "query", "name": "match[entity_name]", "required": false, "type": "string", "description": "Match alerts by their entity names (separated by commas)."}, {"in": "query", "name": "match[entity_uuid]", "required": false, "type": "string", "description": "Match alerts by their entity uuids (separated by commas)."}, {"in": "query", "name": "match[status_uuid]", "required": false, "type": "string", "description": "Match alerts by their status uuids (separated by commas)."}, {"in": "query", "name": "match[status_name]", "required": false, "type": "string", "description": "Match alerts by their status name (separated by commas)."}, {"in": "query", "name": "match[type_category]", "required": false, "type": "string", "description": "Match alerts by their type categories (separated by commas)."}, {"in": "query", "name": "match[type_value]", "required": false, "type": "string", "description": "Match alerts by their type values (separated by commas)."}, {"in": "query", "name": "match[source]", "required": false, "type": "string", "description": "Match alerts by their sources (separated by commas)."}, {"in": "query", "name": "match[target]", "required": false, "type": "string", "description": "Match alerts by their targets (separated by commas)."}, {"in": "query", "name": "match[node]", "required": false, "type": "string", "description": "Match alerts either by their sources or their targets (separated by commas)."}, {"in": "query", "name": "match[stix_object]", "required": false, "type": "string", "description": "Match alerts that contains requested STIX objects IDs"}, {"in": "query", "name": "match[rule_uuid]", "required": false, "type": "string", "description": "Match alerts by their rule uuids (separated by commas)."}, {"in": "query", "name": "match[rule_name]", "required": false, "type": "string", "description": "Match alerts by their rule names (separated by commas)."}, {"in": "query", "name": "match[detection_type]", "required": false, "type": "string", "description": "Match alerts by their detection type (separated by commas)."}, {"in": "query", "name": "match[short_id]", "required": false, "type": "string", "description": "Match alerts by their short_id (separated by commas)."}, {"in": "query", "name": "match[uuid]", "required": false, "type": "string", "description": "Match alerts by their uuid (separated by commas)."}, {"in": "query", "name": "match[title]", "required": false, "type": "string", "description": "Match alerts by their title (separated by commas)."}, {"in": "query", "name": "match[asset_uuid]", "required": false, "type": "string", "description": "Match alerts for specific assets (separated by commas)."}, {"in": "query", "name": "match[urgency_display]", "required": false, "type": "string", "description": "Match alerts for specific urgency display (separated by commas)."}, {"in": "query", "name": "match[case_short_id]", "required": false, "type": "string", "description": "Match alerts by their case short_id (separated by commas)."}, {"in": "query", "name": "date[created_at]", "required": false, "type": "string", "default": null, "x-nullable": true, "description": "Filter alerts by their creation dates (see rfc3339)."}, {"in": "query", "name": "date[updated_at]", "required": false, "type": "string", "default": null, "x-nullable": true, "description": "Filter alerts by their update dates (see rfc3339)."}, {"in": "query", "name": "range[urgency]", "required": false, "type": "string", "default": null, "x-nullable": true, "description": "Filter alerts by their urgencies."}, {"in": "query", "name": "range[similar]", "required": false, "type": "string", "default": null, "x-nullable": true, "description": "Filter alerts by their number of similar occurrences."}, {"in": "query", "name": "visible", "required": false, "type": "boolean", "default": true, "description": "Filter alerts according their visibility"}, {"in": "query", "name": "is_assigned_to_case", "required": false, "type": "boolean", "description": "Filter alerts assigned to a case"}, {"in": "query", "name": "similar_to", "required": false, "type": "string", "default": null, "x-nullable": true, "description": "Filter alerts similar to the provided alert short ID"}, {"in": "query", "name": "nomatch[asset_uuid]", "required": false, "type": "string", "description": "Exclude alerts for specific assets (separated by commas)."}, {"in": "query", "name": "nomatch[entity_uuid]", "required": false, "type": "string", "description": "Exclude alerts for specific entities (separated by commas)."}, {"in": "query", "name": "nomatch[rule_uuid]", "required": false, "type": "string", "description": "Exclude alerts for specific rules (separated by commas)."}, {"in": "query", "name": "nomatch[rule_name]", "required": false, "type": "string", "description": "Exclude alerts for specific rules (separated by commas)."}, {"in": "query", "name": "nomatch[detection_type]", "required": false, "type": "string", "description": "Exclude detection type (separated by commas)."}, {"in": "query", "name": "nomatch[source]", "required": false, "type": "string", "description": "Exclude alerts for specific sources (separated by commas)."}, {"in": "query", "name": "nomatch[target]", "required": false, "type": "string", "description": "Exclude alerts for specific targets (separated by commas)."}, {"in": "query", "name": "nomatch[status_uuid]", "required": false, "type": "string", "description": "Exclude alerts with specific statuses (separated by commas)."}, {"in": "query", "name": "nomatch[stix_object]", "required": false, "type": "string", "description": "Exclude alerts for specific threats (separated by commas)."}, {"in": "query", "name": "nomatch[type_value]", "required": false, "type": "string", "description": "Exclude alerts for specific type values (separated by commas)."}, {"in": "query", "name": "nomatch[urgency_display]", "required": false, "type": "string", "description": "Exclude alerts for specific urgency display (separated by commas)."}, {"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}, {"in": "query", "name": "stix", "required": false, "type": "boolean", "default": false, "description": "If set, the STIX bundle object is also returned."}, {"in": "query", "name": "cases", "required": false, "type": "boolean", "default": false, "description": "If set, some information about related cases is also returned."}, {"in": "query", "name": "sort", "required": false, "description": "field to sort returned alerts", "enum": ["created_at", "source", "target", "urgency", "entity", "type", "status", "rule_name", "updated_at", "similar"]}, {"in": "query", "name": "direction", "required": false, "type": "string", "description": "Direction of the sort (accepted values: 'asc', 'desc')."}, {"in": "query", "name": "with_count", "required": false, "type": "boolean", "default": true, "description": "Whether or not the total should be returned in the response"}], "tags": ["Detection", "Alert"]}}, "/alerts/bulk/add-to-case": {"patch": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/TaskIdSchema"}}, "400": {"description": "Invalid parameters"}}, "summary": "Add alerts to a case", "description": "The following permissions are required:\n - \u201cManage alerts\u201d (`0e329f9c-173f-4fa0-bbbc-fcfc4bdf7559`)", "operationId": "patch_alert_case_bulk_ressource", "parameters": [{"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Match alerts by their community uuids."}, {"in": "query", "name": "match[entity_name]", "required": false, "type": "string", "description": "Match alerts by their entity names (separated by commas)."}, {"in": "query", "name": "match[entity_uuid]", "required": false, "type": "string", "description": "Match alerts by their entity uuids (separated by commas)."}, {"in": "query", "name": "match[status_uuid]", "required": false, "type": "string", "description": "Match alerts by their status uuids (separated by commas)."}, {"in": "query", "name": "match[status_name]", "required": false, "type": "string", "description": "Match alerts by their status name (separated by commas)."}, {"in": "query", "name": "match[type_category]", "required": false, "type": "string", "description": "Match alerts by their type categories (separated by commas)."}, {"in": "query", "name": "match[type_value]", "required": false, "type": "string", "description": "Match alerts by their type values (separated by commas)."}, {"in": "query", "name": "match[source]", "required": false, "type": "string", "description": "Match alerts by their sources (separated by commas)."}, {"in": "query", "name": "match[target]", "required": false, "type": "string", "description": "Match alerts by their targets (separated by commas)."}, {"in": "query", "name": "match[node]", "required": false, "type": "string", "description": "Match alerts either by their sources or their targets (separated by commas)."}, {"in": "query", "name": "match[stix_object]", "required": false, "type": "string", "description": "Match alerts that contains requested STIX objects IDs"}, {"in": "query", "name": "match[rule_uuid]", "required": false, "type": "string", "description": "Match alerts by their rule uuids (separated by commas)."}, {"in": "query", "name": "match[rule_name]", "required": false, "type": "string", "description": "Match alerts by their rule names (separated by commas)."}, {"in": "query", "name": "match[detection_type]", "required": false, "type": "string", "description": "Match alerts by their detection type (separated by commas)."}, {"in": "query", "name": "match[short_id]", "required": false, "type": "string", "description": "Match alerts by their short_id (separated by commas)."}, {"in": "query", "name": "match[uuid]", "required": false, "type": "string", "description": "Match alerts by their uuid (separated by commas)."}, {"in": "query", "name": "match[title]", "required": false, "type": "string", "description": "Match alerts by their title (separated by commas)."}, {"in": "query", "name": "match[asset_uuid]", "required": false, "type": "string", "description": "Match alerts for specific assets (separated by commas)."}, {"in": "query", "name": "match[urgency_display]", "required": false, "type": "string", "description": "Match alerts for specific urgency display (separated by commas)."}, {"in": "query", "name": "match[case_short_id]", "required": false, "type": "string", "description": "Match alerts by their case short_id (separated by commas)."}, {"in": "query", "name": "date[created_at]", "required": false, "type": "string", "default": null, "x-nullable": true, "description": "Filter alerts by their creation dates (see rfc3339)."}, {"in": "query", "name": "date[updated_at]", "required": false, "type": "string", "default": null, "x-nullable": true, "description": "Filter alerts by their update dates (see rfc3339)."}, {"in": "query", "name": "range[urgency]", "required": false, "type": "string", "default": null, "x-nullable": true, "description": "Filter alerts by their urgencies."}, {"in": "query", "name": "range[similar]", "required": false, "type": "string", "default": null, "x-nullable": true, "description": "Filter alerts by their number of similar occurrences."}, {"in": "query", "name": "visible", "required": false, "type": "boolean", "default": true, "description": "Filter alerts according their visibility"}, {"in": "query", "name": "is_assigned_to_case", "required": false, "type": "boolean", "description": "Filter alerts assigned to a case"}, {"in": "query", "name": "similar_to", "required": false, "type": "string", "default": null, "x-nullable": true, "description": "Filter alerts similar to the provided alert short ID"}, {"in": "query", "name": "nomatch[asset_uuid]", "required": false, "type": "string", "description": "Exclude alerts for specific assets (separated by commas)."}, {"in": "query", "name": "nomatch[entity_uuid]", "required": false, "type": "string", "description": "Exclude alerts for specific entities (separated by commas)."}, {"in": "query", "name": "nomatch[rule_uuid]", "required": false, "type": "string", "description": "Exclude alerts for specific rules (separated by commas)."}, {"in": "query", "name": "nomatch[rule_name]", "required": false, "type": "string", "description": "Exclude alerts for specific rules (separated by commas)."}, {"in": "query", "name": "nomatch[detection_type]", "required": false, "type": "string", "description": "Exclude detection type (separated by commas)."}, {"in": "query", "name": "nomatch[source]", "required": false, "type": "string", "description": "Exclude alerts for specific sources (separated by commas)."}, {"in": "query", "name": "nomatch[target]", "required": false, "type": "string", "description": "Exclude alerts for specific targets (separated by commas)."}, {"in": "query", "name": "nomatch[status_uuid]", "required": false, "type": "string", "description": "Exclude alerts with specific statuses (separated by commas)."}, {"in": "query", "name": "nomatch[stix_object]", "required": false, "type": "string", "description": "Exclude alerts for specific threats (separated by commas)."}, {"in": "query", "name": "nomatch[type_value]", "required": false, "type": "string", "description": "Exclude alerts for specific type values (separated by commas)."}, {"in": "query", "name": "nomatch[urgency_display]", "required": false, "type": "string", "description": "Exclude alerts for specific urgency display (separated by commas)."}, {"in": "query", "name": "case_uuid", "required": true, "type": "string", "description": "uuid of the case to which the alerts are added"}], "tags": ["Detection", "Alert", "Case"]}}, "/alerts/bulk/workflow": {"get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertStatusWorkflowSchema"}}, "400": {"description": "Invalid parameters"}}, "summary": "List the actions available to update alert statuses", "description": "The following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)", "operationId": "get_alert_workflow_bulk_resource", "tags": ["Detection", "Alert", "Alert Status"]}, "patch": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "204": {"description": "Success"}, "400": {"description": "Invalid parameters"}, "409": {"description": "Invalid action given current status"}}, "summary": "Triggers a status update on a list of alerts", "description": "This endpoint performs an action on selected alerts and changes theirs statuses according to the performed\naction and the workflow.\n\nThe list of selected alerts, on which the action will be performed,\nis specified with the filter (url parameter)\n`match[uuid]`, that accept a list of identifiers (or short_id) of alerts separated by commas, while the\nidentifier of the action is set in the body of the request as a json dictionary.\n\nThe identifier of the action is brought from the workflow (GET request on this endpoint).\n\nThe following permissions are required:\n - \u201cUpdate alert status\u201d (`9f3df1b1-4db7-44bd-b615-af5873ad7f8a`)", "operationId": "patch_alert_workflow_bulk_resource", "parameters": [{"in": "query", "name": "match[uuid]", "required": true, "type": "string", "description": "Match alerts by their identifier (uuid or short_id; separated by commas)."}, {"in": "query", "name": "action_uuid", "required": true, "type": "string", "description": "UUID of the action to trigger, or the status to set"}, {"in": "query", "name": "comment", "required": false, "type": "string", "x-nullable": true, "description": "a comment to describe why the alert status has changed"}], "tags": ["Detection", "Alert", "Alert Status"]}}, "/alerts/bulk/workflow/async": {"patch": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/TaskIdSchema"}}, "400": {"description": "Invalid parameters"}}, "summary": "Trigger an action on the alert workflow asynchronously on a list of alerts", "description": "The following permissions are required:\n - \u201cUpdate alert status\u201d (`9f3df1b1-4db7-44bd-b615-af5873ad7f8a`)", "operationId": "patch_alert_workflow_async_bulk_resource", "parameters": [{"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Match alerts by their community uuids."}, {"in": "query", "name": "match[entity_name]", "required": false, "type": "string", "description": "Match alerts by their entity names (separated by commas)."}, {"in": "query", "name": "match[entity_uuid]", "required": false, "type": "string", "description": "Match alerts by their entity uuids (separated by commas)."}, {"in": "query", "name": "match[status_uuid]", "required": false, "type": "string", "description": "Match alerts by their status uuids (separated by commas)."}, {"in": "query", "name": "match[status_name]", "required": false, "type": "string", "description": "Match alerts by their status name (separated by commas)."}, {"in": "query", "name": "match[type_category]", "required": false, "type": "string", "description": "Match alerts by their type categories (separated by commas)."}, {"in": "query", "name": "match[type_value]", "required": false, "type": "string", "description": "Match alerts by their type values (separated by commas)."}, {"in": "query", "name": "match[source]", "required": false, "type": "string", "description": "Match alerts by their sources (separated by commas)."}, {"in": "query", "name": "match[target]", "required": false, "type": "string", "description": "Match alerts by their targets (separated by commas)."}, {"in": "query", "name": "match[node]", "required": false, "type": "string", "description": "Match alerts either by their sources or their targets (separated by commas)."}, {"in": "query", "name": "match[stix_object]", "required": false, "type": "string", "description": "Match alerts that contains requested STIX objects IDs"}, {"in": "query", "name": "match[rule_uuid]", "required": false, "type": "string", "description": "Match alerts by their rule uuids (separated by commas)."}, {"in": "query", "name": "match[rule_name]", "required": false, "type": "string", "description": "Match alerts by their rule names (separated by commas)."}, {"in": "query", "name": "match[detection_type]", "required": false, "type": "string", "description": "Match alerts by their detection type (separated by commas)."}, {"in": "query", "name": "match[short_id]", "required": false, "type": "string", "description": "Match alerts by their short_id (separated by commas)."}, {"in": "query", "name": "match[uuid]", "required": false, "type": "string", "description": "Match alerts by their uuid (separated by commas)."}, {"in": "query", "name": "match[title]", "required": false, "type": "string", "description": "Match alerts by their title (separated by commas)."}, {"in": "query", "name": "match[asset_uuid]", "required": false, "type": "string", "description": "Match alerts for specific assets (separated by commas)."}, {"in": "query", "name": "match[urgency_display]", "required": false, "type": "string", "description": "Match alerts for specific urgency display (separated by commas)."}, {"in": "query", "name": "match[case_short_id]", "required": false, "type": "string", "description": "Match alerts by their case short_id (separated by commas)."}, {"in": "query", "name": "date[created_at]", "required": false, "type": "string", "default": null, "x-nullable": true, "description": "Filter alerts by their creation dates (see rfc3339)."}, {"in": "query", "name": "date[updated_at]", "required": false, "type": "string", "default": null, "x-nullable": true, "description": "Filter alerts by their update dates (see rfc3339)."}, {"in": "query", "name": "range[urgency]", "required": false, "type": "string", "default": null, "x-nullable": true, "description": "Filter alerts by their urgencies."}, {"in": "query", "name": "range[similar]", "required": false, "type": "string", "default": null, "x-nullable": true, "description": "Filter alerts by their number of similar occurrences."}, {"in": "query", "name": "visible", "required": false, "type": "boolean", "default": true, "description": "Filter alerts according their visibility"}, {"in": "query", "name": "is_assigned_to_case", "required": false, "type": "boolean", "description": "Filter alerts assigned to a case"}, {"in": "query", "name": "similar_to", "required": false, "type": "string", "default": null, "x-nullable": true, "description": "Filter alerts similar to the provided alert short ID"}, {"in": "query", "name": "nomatch[asset_uuid]", "required": false, "type": "string", "description": "Exclude alerts for specific assets (separated by commas)."}, {"in": "query", "name": "nomatch[entity_uuid]", "required": false, "type": "string", "description": "Exclude alerts for specific entities (separated by commas)."}, {"in": "query", "name": "nomatch[rule_uuid]", "required": false, "type": "string", "description": "Exclude alerts for specific rules (separated by commas)."}, {"in": "query", "name": "nomatch[rule_name]", "required": false, "type": "string", "description": "Exclude alerts for specific rules (separated by commas)."}, {"in": "query", "name": "nomatch[detection_type]", "required": false, "type": "string", "description": "Exclude detection type (separated by commas)."}, {"in": "query", "name": "nomatch[source]", "required": false, "type": "string", "description": "Exclude alerts for specific sources (separated by commas)."}, {"in": "query", "name": "nomatch[target]", "required": false, "type": "string", "description": "Exclude alerts for specific targets (separated by commas)."}, {"in": "query", "name": "nomatch[status_uuid]", "required": false, "type": "string", "description": "Exclude alerts with specific statuses (separated by commas)."}, {"in": "query", "name": "nomatch[stix_object]", "required": false, "type": "string", "description": "Exclude alerts for specific threats (separated by commas)."}, {"in": "query", "name": "nomatch[type_value]", "required": false, "type": "string", "description": "Exclude alerts for specific type values (separated by commas)."}, {"in": "query", "name": "nomatch[urgency_display]", "required": false, "type": "string", "description": "Exclude alerts for specific urgency display (separated by commas)."}, {"in": "query", "name": "action_uuid", "required": true, "type": "string", "description": "UUID of the action to trigger, or the status to set"}, {"in": "query", "name": "comment", "required": false, "type": "string", "x-nullable": true, "description": "a comment to describe why the alert status has changed"}], "tags": ["Detection", "Alert", "Alert Status"]}}, "/alerts/countermeasures/{countermeasure_uuid}": {"parameters": [{"name": "countermeasure_uuid", "in": "path", "required": true, "type": "string"}], "patch": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "400": {"description": "Invalid parameters"}, "404": {"description": "Resource not found"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertCountermeasureSchema"}}}, "summary": "Update a countermeasure", "description": "The following permissions are required:\n - \u201cManage alerts\u201d (`0e329f9c-173f-4fa0-bbbc-fcfc4bdf7559`)", "operationId": "patch_countermeasure_resource", "parameters": [{"in": "body", "required": true, "name": "body", "schema": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the countermeasure"}, "description": {"type": "string", "description": "The description of the countermeasure"}, "duration": {"type": "string", "description": "The duration required to apply the countermeasure"}, "relevance": {"type": "integer", "description": "The relevance of the countermeasure"}, "start_on": {"type": "string", "description": "The name of the actionstep that starts the application of the countermeasure"}, "assignee": {"type": "string", "x-nullable": true, "description": "The identifier of the profile to assign to the countermeasure"}}}}], "tags": ["Detection", "Countermeasures"]}}, "/alerts/countermeasures/{countermeasure_uuid}/activate": {"parameters": [{"name": "countermeasure_uuid", "in": "path", "required": true, "type": "string"}], "patch": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "404": {"description": "Resource not found"}, "409": {"description": "Invalid action given current status"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertCountermeasureSchema"}}}, "summary": "Activate a countermeasure", "description": "An optional comment can be provided to\nbe attached to the countermeasure.\n\nThe following permissions are required:\n - \u201cManage alerts\u201d (`0e329f9c-173f-4fa0-bbbc-fcfc4bdf7559`)", "operationId": "patch_activate_countermeasure_resource", "parameters": [{"in": "body", "required": true, "name": "body", "schema": {"type": "object", "properties": {"comment": {"type": "object", "properties": {"content": {"type": "string", "description": "Content of the comment"}, "author": {"type": "string", "maxLength": 32, "description": "Author of the comment"}}, "required": ["content"]}}}}], "tags": ["Investigation", "Countermeasures", "Comments"]}}, "/alerts/countermeasures/{countermeasure_uuid}/comments": {"parameters": [{"name": "countermeasure_uuid", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "201": {"description": "Success", "schema": {"$ref": "#/definitions/CommentSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknown counter measure"}}, "summary": "Create a comment on a countermeasure", "description": "The following permissions are required:\n - \u201cComment alerts\u201d (`341436f9-1c33-4cf7-bec3-a6955133ea04`)", "operationId": "post_countermeasure_comments_resource", "parameters": [{"in": "query", "name": "content", "required": true, "type": "string", "description": "Content of the comment"}, {"in": "query", "name": "author", "required": false, "type": "string", "maxLength": 32, "description": "Author of the comment"}], "tags": ["Investigation", "Comments", "Countermeasures"]}, "get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CommentsSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknown counter measure"}}, "summary": "List the comments of a countermeasure", "description": "The following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)", "operationId": "get_countermeasure_comments_resource", "parameters": [{"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}], "tags": ["Investigation", "Comments", "Countermeasures"]}}, "/alerts/countermeasures/{countermeasure_uuid}/deny": {"parameters": [{"name": "countermeasure_uuid", "in": "path", "required": true, "type": "string"}], "patch": {"responses": {"404": {"description": "Resource not found"}, "409": {"description": "Invalid action given current status"}, "401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertCountermeasureSchema"}}}, "summary": "Deny a countermeasure", "description": "An optional comment can be provided to\nbe attached to the countermeasure.\n\nThe following permissions are required:\n - \u201cManage alerts\u201d (`0e329f9c-173f-4fa0-bbbc-fcfc4bdf7559`)", "operationId": "patch_deny_countermeasure_resource", "parameters": [{"in": "body", "required": true, "name": "body", "schema": {"type": "object", "properties": {"comment": {"type": "object", "properties": {"content": {"type": "string", "description": "Content of the comment"}, "author": {"type": "string", "maxLength": 32, "description": "Author of the comment"}}, "required": ["content"]}}}}], "tags": ["Detection", "Countermeasures"]}}, "/alerts/countermeasures/{countermeasure_uuid}/{action_step_name_or_uuid}/": {"parameters": [{"name": "countermeasure_uuid", "in": "path", "required": true, "type": "string"}, {"name": "action_step_name_or_uuid", "in": "path", "required": true, "type": "string"}], "put": {"responses": {"404": {"description": "Resource not found"}, "401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CountermeasureActionStepSchema"}}}, "summary": "Create or update an action step in the countermeasure", "description": "The following permissions are required:\n - \u201cManage alerts\u201d (`0e329f9c-173f-4fa0-bbbc-fcfc4bdf7559`)", "operationId": "put_countermeasure_action_step_resource", "parameters": [{"in": "body", "required": true, "name": "body", "schema": {"type": "object", "properties": {"description": {"type": "string", "description": "The description of the action step"}, "type": {"type": "string", "description": "The type of the actionstep"}, "object": {"type": "object", "description": "The content of the action step"}, "action_order": {"type": "integer", "description": "The position of the action step between its siblings"}, "assignee": {"type": "string", "description": "The identifier of the profile to assign to the actionstep"}}, "required": ["action_order", "description", "object", "type"]}}], "tags": ["Detection", "Countermeasures"]}, "get": {"responses": {"404": {"description": "Resource not found"}, "401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CountermeasureActionStepSchema"}}}, "summary": "Get an action step in the countermeasure", "description": "The following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)", "operationId": "get_countermeasure_action_step_resource", "tags": ["Detection", "Countermeasures"]}, "patch": {"responses": {"404": {"description": "Resource not found"}, "401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CountermeasureActionStepSchema"}}}, "summary": "Create or update an action step in the countermeasure", "description": "The following permissions are required:\n - \u201cManage alerts\u201d (`0e329f9c-173f-4fa0-bbbc-fcfc4bdf7559`)", "operationId": "patch_countermeasure_action_step_resource", "parameters": [{"in": "body", "required": true, "name": "body", "schema": {"type": "object", "properties": {"description": {"type": "string", "description": "The description of the action step"}, "type": {"type": "string", "description": "The type of the actionstep"}, "object": {"type": "object", "description": "The content of the action step"}, "action_order": {"type": "integer", "description": "The position of the action step between its siblings"}, "assignee": {"type": "string", "x-nullable": true, "description": "The identifier of the profile to assign to the actionstep"}, "name": {"type": "string", "description": "New name of the action step"}}}}], "tags": ["Detection", "Countermeasures"]}, "delete": {"responses": {"404": {"description": "Resource not found"}, "401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "204": {"description": "Success"}}, "summary": "Remove an action step from the countermeasure", "description": "The following permissions are required:\n - \u201cManage alerts\u201d (`0e329f9c-173f-4fa0-bbbc-fcfc4bdf7559`)", "operationId": "delete_countermeasure_action_step_resource", "tags": ["Detection", "Countermeasures"]}}, "/alerts/countermeasures/{countermeasure_uuid}/{action_step_name_or_uuid}/activate": {"parameters": [{"name": "countermeasure_uuid", "in": "path", "required": true, "type": "string"}, {"name": "action_step_name_or_uuid", "in": "path", "required": true, "type": "string"}], "patch": {"responses": {"404": {"description": "Resource not found"}, "409": {"description": "Invalid action given current status"}, "401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CountermeasureActionStepSchema"}}}, "summary": "Activate an action step of a countermeasure", "description": "An optional comment can be provided to\nbe attached to the action step.\n\nThe following permissions are required:\n - \u201cManage alerts\u201d (`0e329f9c-173f-4fa0-bbbc-fcfc4bdf7559`)", "operationId": "patch_activate_action_step_resource", "parameters": [{"in": "body", "required": true, "name": "body", "schema": {"type": "object", "properties": {"comment": {"type": "object", "properties": {"content": {"type": "string", "description": "Content of the comment"}, "author": {"type": "string", "maxLength": 32, "description": "Author of the comment"}}, "required": ["content"]}}}}], "tags": ["Detection", "Countermeasures"]}}, "/alerts/countermeasures/{countermeasure_uuid}/{action_step_name_or_uuid}/comments": {"parameters": [{"name": "countermeasure_uuid", "in": "path", "required": true, "type": "string"}, {"name": "action_step_name_or_uuid", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "201": {"description": "Success", "schema": {"$ref": "#/definitions/CommentSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknown counter measure"}}, "summary": "Post a comment on an action step", "description": "The following permissions are required:\n - \u201cComment alerts\u201d (`341436f9-1c33-4cf7-bec3-a6955133ea04`)", "operationId": "post_actionstep_comments_resource", "parameters": [{"in": "query", "name": "content", "required": true, "type": "string", "description": "Content of the comment"}, {"in": "query", "name": "author", "required": false, "type": "string", "maxLength": 32, "description": "Author of the comment"}], "tags": ["Detection", "Countermeasures", "Comments"]}, "get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CommentsSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknown counter measure or action step"}}, "summary": "List the comments of an action step", "description": "The following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)", "operationId": "get_actionstep_comments_resource", "parameters": [{"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}], "tags": ["Detection", "Countermeasures", "Comments"]}}, "/alerts/countermeasures/{countermeasure_uuid}/{action_step_name_or_uuid}/deny": {"parameters": [{"name": "countermeasure_uuid", "in": "path", "required": true, "type": "string"}, {"name": "action_step_name_or_uuid", "in": "path", "required": true, "type": "string"}], "patch": {"responses": {"404": {"description": "Resource not found"}, "409": {"description": "Invalid action given current status"}, "401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CountermeasureActionStepSchema"}}}, "summary": "Deny an action step of a countermeasure", "description": "An optional comment can be provided to\nbe attached to the action step.\n\nThe following permissions are required:\n - \u201cManage alerts\u201d (`0e329f9c-173f-4fa0-bbbc-fcfc4bdf7559`)", "operationId": "patch_deny_action_step_resource", "parameters": [{"in": "body", "required": true, "name": "body", "schema": {"type": "object", "properties": {"comment": {"type": "object", "properties": {"content": {"type": "string", "description": "Content of the comment"}, "author": {"type": "string", "maxLength": 32, "description": "Author of the comment"}}, "required": ["content"]}}}}], "tags": ["Detection", "Countermeasures"]}}, "/alerts/entities": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertEntitiesSchema"}}, "401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}}, "summary": "List alert entities", "description": "This paginated endpoint lists all the entities found in the produced alerts (last 90 days).\nAn entity is denoted by its name and its uuid.\n\nThe following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)", "operationId": "get_alert_entities_resource", "parameters": [{"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Communities to match (separated by commas)."}, {"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}, {"in": "query", "name": "community_uuid", "required": false, "type": "string", "description": "UUID of the community"}, {"in": "query", "name": "match[name]", "required": false, "type": "string", "description": "Match entites by their names (separated by commas)."}, {"in": "query", "name": "match[uuid]", "required": false, "type": "string", "description": "Match entites by theirs uuids (separated by commas)."}, {"in": "query", "name": "sort", "required": false, "description": "field to sort by", "enum": ["name", "uuid"]}, {"in": "query", "name": "direction", "required": false, "type": "string", "description": "Direction of the sort (accepted values: 'asc', 'desc')."}], "tags": ["Detection", "Alert"]}}, "/alerts/rules": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertRulesSchema"}}, "401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}}, "summary": "List alert rules", "description": "This paginated endpoint lists all the different rule found in the produced alerts.\n\nThe following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)", "operationId": "get_alert_rules_resource", "parameters": [{"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Communities to match (separated by commas)."}, {"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}, {"in": "query", "name": "community_uuid", "required": false, "type": "string", "description": "UUID of the community"}, {"in": "query", "name": "match[name]", "required": false, "type": "string", "description": "Match rules by their names (separated by commas)."}, {"in": "query", "name": "match[uuid]", "required": false, "type": "string", "description": "Match rules by theirs uuids (separated by commas)."}, {"in": "query", "name": "match[entity_name]", "required": false, "type": "string", "description": "Match rules by their entity names (separated by commas)."}, {"in": "query", "name": "match[entity_uuid]", "required": false, "type": "string", "description": "Match rules by their entity uuids (separated by commas)."}, {"in": "query", "name": "sort", "required": false, "type": "string", "description": "Sort attribute (accepted values: 'name')."}, {"in": "query", "name": "direction", "required": false, "type": "string", "description": "Direction of the sort (accepted values: 'asc', 'desc')."}], "tags": ["Detection", "Alert", "Rules"]}}, "/alerts/sources": {"get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertSourcesSchema"}}, "400": {"description": "Invalid parameters"}}, "summary": "List alert sources (last 90 days)", "description": "This paginated endpoint lists all the different sources found in the produced alerts.\n\nThe following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)", "operationId": "get_alert_sources_resource", "parameters": [{"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Communities to match (separated by commas)."}, {"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}, {"in": "query", "name": "community_uuid", "required": false, "type": "string", "description": "UUID of the community"}, {"in": "query", "name": "match[value]", "required": false, "type": "string", "description": "Match rules by their names (separated by commas)."}], "tags": ["Detection", "Alert", "Alert Sources and Targets"]}}, "/alerts/statistics": {"get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/StatisticsSchema"}}, "400": {"description": "Invalid parameters"}}, "summary": "Get Alert Statistics", "description": "Get Alert Total Count, Count by Status, and Today's Count\n\nThe following permissions are required:\n - \u201cView alert statistics\u201d (`b1642ef8-4bc0-40b4-9ddf-7bd368659941`)", "operationId": "get_alerts_statistics_resource", "parameters": [{"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Match alerts by their community uuids."}, {"in": "query", "name": "match[entity_name]", "required": false, "type": "string", "description": "Match alerts by their entity names (separated by commas)."}, {"in": "query", "name": "match[entity_uuid]", "required": false, "type": "string", "description": "Match alerts by their entity uuids (separated by commas)."}, {"in": "query", "name": "match[status_uuid]", "required": false, "type": "string", "description": "Match alerts by their status uuids (separated by commas)."}, {"in": "query", "name": "match[status_name]", "required": false, "type": "string", "description": "Match alerts by their status name (separated by commas)."}, {"in": "query", "name": "match[type_category]", "required": false, "type": "string", "description": "Match alerts by their type categories (separated by commas)."}, {"in": "query", "name": "match[type_value]", "required": false, "type": "string", "description": "Match alerts by their type values (separated by commas)."}, {"in": "query", "name": "match[source]", "required": false, "type": "string", "description": "Match alerts by their sources (separated by commas)."}, {"in": "query", "name": "match[target]", "required": false, "type": "string", "description": "Match alerts by their targets (separated by commas)."}, {"in": "query", "name": "match[node]", "required": false, "type": "string", "description": "Match alerts either by their sources or their targets (separated by commas)."}, {"in": "query", "name": "match[stix_object]", "required": false, "type": "string", "description": "Match alerts that contains requested STIX objects IDs"}, {"in": "query", "name": "match[rule_uuid]", "required": false, "type": "string", "description": "Match alerts by their rule uuids (separated by commas)."}, {"in": "query", "name": "match[rule_name]", "required": false, "type": "string", "description": "Match alerts by their rule names (separated by commas)."}, {"in": "query", "name": "match[detection_type]", "required": false, "type": "string", "description": "Match alerts by their detection type (separated by commas)."}, {"in": "query", "name": "match[short_id]", "required": false, "type": "string", "description": "Match alerts by their short_id (separated by commas)."}, {"in": "query", "name": "match[uuid]", "required": false, "type": "string", "description": "Match alerts by their uuid (separated by commas)."}, {"in": "query", "name": "match[title]", "required": false, "type": "string", "description": "Match alerts by their title (separated by commas)."}, {"in": "query", "name": "match[asset_uuid]", "required": false, "type": "string", "description": "Match alerts for specific assets (separated by commas)."}, {"in": "query", "name": "match[urgency_display]", "required": false, "type": "string", "description": "Match alerts for specific urgency display (separated by commas)."}, {"in": "query", "name": "match[case_short_id]", "required": false, "type": "string", "description": "Match alerts by their case short_id (separated by commas)."}, {"in": "query", "name": "date[created_at]", "required": false, "type": "string", "default": null, "x-nullable": true, "description": "Filter alerts by their creation dates (see rfc3339)."}, {"in": "query", "name": "date[updated_at]", "required": false, "type": "string", "default": null, "x-nullable": true, "description": "Filter alerts by their update dates (see rfc3339)."}, {"in": "query", "name": "range[urgency]", "required": false, "type": "string", "default": null, "x-nullable": true, "description": "Filter alerts by their urgencies."}, {"in": "query", "name": "range[similar]", "required": false, "type": "string", "default": null, "x-nullable": true, "description": "Filter alerts by their number of similar occurrences."}, {"in": "query", "name": "visible", "required": false, "type": "boolean", "default": true, "description": "Filter alerts according their visibility"}, {"in": "query", "name": "is_assigned_to_case", "required": false, "type": "boolean", "description": "Filter alerts assigned to a case"}, {"in": "query", "name": "similar_to", "required": false, "type": "string", "default": null, "x-nullable": true, "description": "Filter alerts similar to the provided alert short ID"}, {"in": "query", "name": "nomatch[asset_uuid]", "required": false, "type": "string", "description": "Exclude alerts for specific assets (separated by commas)."}, {"in": "query", "name": "nomatch[entity_uuid]", "required": false, "type": "string", "description": "Exclude alerts for specific entities (separated by commas)."}, {"in": "query", "name": "nomatch[rule_uuid]", "required": false, "type": "string", "description": "Exclude alerts for specific rules (separated by commas)."}, {"in": "query", "name": "nomatch[rule_name]", "required": false, "type": "string", "description": "Exclude alerts for specific rules (separated by commas)."}, {"in": "query", "name": "nomatch[detection_type]", "required": false, "type": "string", "description": "Exclude detection type (separated by commas)."}, {"in": "query", "name": "nomatch[source]", "required": false, "type": "string", "description": "Exclude alerts for specific sources (separated by commas)."}, {"in": "query", "name": "nomatch[target]", "required": false, "type": "string", "description": "Exclude alerts for specific targets (separated by commas)."}, {"in": "query", "name": "nomatch[status_uuid]", "required": false, "type": "string", "description": "Exclude alerts with specific statuses (separated by commas)."}, {"in": "query", "name": "nomatch[stix_object]", "required": false, "type": "string", "description": "Exclude alerts for specific threats (separated by commas)."}, {"in": "query", "name": "nomatch[type_value]", "required": false, "type": "string", "description": "Exclude alerts for specific type values (separated by commas)."}, {"in": "query", "name": "nomatch[urgency_display]", "required": false, "type": "string", "description": "Exclude alerts for specific urgency display (separated by commas)."}], "tags": ["Reporting", "Statistics", "Alert"]}}, "/alerts/stats/rules": {"get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/StatsRulesSchema"}}, "400": {"description": "Invalid Parameters"}}, "summary": "Get statistics indexed by rules (deprecated)", "description": "This paginates endpoint list all the produced statistics indexed by rules. A set of filters can be\nspecified to focus on certain statistics.\n\nThe following permissions are required:\n - \u201cView alert statistics\u201d (`b1642ef8-4bc0-40b4-9ddf-7bd368659941`)", "operationId": "get_deprecated_alert_stat_rules_resource", "parameters": [{"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Communities to match (separated by commas)."}, {"in": "query", "name": "date[created_at]", "required": true, "type": "string", "description": "Filter on creation date (see rfc3339)"}, {"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}, {"in": "query", "name": "match[rule_name]", "required": false, "type": "string", "description": "Match alerts by their rule names (separated by commas)"}, {"in": "query", "name": "match[rule_uuid]", "required": false, "type": "string", "description": "Match alerts by their rule uuids (separated by commas)"}], "tags": ["Stats"]}}, "/alerts/statuses": {"get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertStatusesSchema"}}, "400": {"description": "Invalid parameters"}}, "summary": "List alert statuses", "description": "This paginated endpoint iterates on all the available statuses of an alert.\nA status has a unique `uuid`, a `name` and a `description`.\n\nBelow is an example of an alert status:\n\n    {\n      'uuid': '2efc4930-1442-4abb-acf2-58ba219a4fd0',\n      'name': 'Pending',\n      'description': 'The alert is waiting for an action'\n    }\n\nThe following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)", "operationId": "get_alert_statuses_resource", "parameters": [{"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}], "tags": ["Detection", "Alert", "Alert Status"]}}, "/alerts/targets": {"get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertTargetsSchema"}}, "400": {"description": "Invalid parameters"}}, "summary": "List alert targets (last 90 days)", "description": "This paginated endpoint lists all the different targets found in the produced alerts.\n\nThe following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)", "operationId": "get_alert_targets_resource", "parameters": [{"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Communities to match (separated by commas)."}, {"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}, {"in": "query", "name": "community_uuid", "required": false, "type": "string", "description": "UUID of the community"}, {"in": "query", "name": "match[value]", "required": false, "type": "string", "description": "Match rules by their names (separated by commas)."}], "tags": ["Detection", "Alert", "Alert Sources and Targets"]}}, "/alerts/threats/global-top/{threat_type}": {"parameters": [{"name": "threat_type", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/StatisticsSchema"}}, "401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "400": {"description": "Invalid parameters"}}, "summary": "Return the top alerts for the given type", "description": "The top is global and not specific to a community\n\nThe following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)\n - \u201cView global platform telemetry\u201d (`c846153e-0ac4-4c74-a635-3ac63e993c6b`)", "operationId": "get_top_threat_resource", "parameters": [{"in": "query", "name": "limit", "required": false, "type": "integer", "default": 5, "minimum": 1, "maximum": 10, "description": "Limit the number of results"}, {"in": "query", "name": "date[created_at]", "required": true, "type": "string", "description": "Filter on creation date"}], "tags": ["Detection", "Alert", "Threats"]}}, "/alerts/threats/impact": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/StatisticsSchema"}}, "401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "400": {"description": "Invalid parameters"}}, "description": "The following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)\n - \u201cView global platform telemetry\u201d (`c846153e-0ac4-4c74-a635-3ac63e993c6b`)", "operationId": "post_threat_impact_resource", "parameters": [{"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Communities to match (separated by commas)."}, {"in": "query", "name": "threat_ids", "required": true, "collectionFormat": "multi", "type": "array", "minItems": 1, "description": "List of threat IDs", "items": {"type": "string"}}, {"in": "query", "name": "date[created_at]", "required": true, "type": "string", "description": "Filter on creation date"}], "tags": ["Detection", "Alert", "Threats"]}}, "/alerts/types": {"get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertTypesSchema"}}, "400": {"description": "Invalid parameters"}}, "summary": "List observed alert types (last 90 days)", "description": "This paginated endpoint iterates on observed alert types and their categories.\nAn alert type has a value and a category. It should be noted, that different alert types\ncan share the same category while it exists only one alert type with the same value and category.\n\nBelow is an example of an alert type:\n\n    { 'category': 'abusive-usage', 'value': 'bandwidth-upload' }\n\nThe following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)", "operationId": "get_alert_types_resource", "parameters": [{"in": "query", "name": "limit", "required": false, "type": "integer", "default": 100, "minimum": 1, "maximum": 100, "description": "limit the number of items (allowed range is 1-100), default is 100."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}, {"in": "query", "name": "match[category]", "required": false, "type": "string", "description": "Category of alert types to match (separated by commas)."}, {"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Category of community to match (separated by commas)."}, {"in": "query", "name": "match[value]", "required": false, "type": "string", "description": "Value of alert types to match (separated by commas)."}], "tags": ["Detection", "Alert", "Alert Type"]}}, "/alerts/{alert_uuid}/comments/{comment_uuid}": {"parameters": [{"name": "alert_uuid", "in": "path", "required": true, "type": "string"}, {"name": "comment_uuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertCommentSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknown alert"}}, "summary": "Get a comment on an alert", "description": "The following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)", "operationId": "get_alert_comment_resource", "tags": ["Detection", "Alert", "Comments"]}, "patch": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertCommentSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknown alert"}}, "summary": "Update a comment on an alert", "description": "The following permissions are required:\n - \u201cComment alerts\u201d (`341436f9-1c33-4cf7-bec3-a6955133ea04`)", "operationId": "patch_alert_comment_resource", "parameters": [{"in": "query", "name": "content", "required": true, "type": "string", "description": "Content of the comment"}, {"in": "query", "name": "author", "required": false, "type": "string", "maxLength": 32, "description": "Author of the comment"}], "tags": ["Detection", "Alert", "Comments"]}, "delete": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknown alert"}}, "summary": "Delete a comment on an alert", "description": "The following permissions are required:\n - \u201cComment alerts\u201d (`341436f9-1c33-4cf7-bec3-a6955133ea04`)", "operationId": "delete_alert_comment_resource", "tags": ["Detection", "Alert", "Comments"]}}, "/alerts/{alert_uuid}/history/{history_uuid}": {"parameters": [{"name": "alert_uuid", "in": "path", "required": true, "type": "string"}, {"name": "history_uuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertHistoryEntrySchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknown alert"}}, "summary": "Get an history entry of an alert", "description": "The following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)", "operationId": "get_alert_history_resource", "tags": ["Detection", "Alert"]}}, "/alerts/{alert_uuid}/history/{history_uuid}/comments": {"parameters": [{"name": "alert_uuid", "in": "path", "required": true, "type": "string"}, {"name": "history_uuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CommentsSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknown alert"}}, "summary": "List the history of comments of an alert", "description": "The following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)", "operationId": "get_alert_history_comments_resource", "parameters": [{"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}], "tags": ["Detection", "Alert", "Comments"]}}, "/alerts/{alert_uuid}/objects/{object_id}": {"parameters": [{"name": "alert_uuid", "in": "path", "required": true, "type": "string"}, {"name": "object_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknown alert or object"}}, "summary": "Get an alert object by its UUID", "description": "The following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)", "operationId": "get_alert_object_resource", "tags": ["Detection", "Alert", "Objects"]}}, "/alerts/{alert_uuid}/timeline": {"parameters": [{"name": "alert_uuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/TimelineSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknown alert"}}, "summary": "Get the timeline of an alert by its UUID", "description": "The following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)", "operationId": "get_alert_timeline_resource", "parameters": [{"in": "query", "name": "type", "required": false, "type": "string", "default": "24h", "description": "Type of timeline (supported values: '24h', '14d')"}, {"in": "query", "name": "frame-length", "required": false, "type": "integer", "description": "Size in observed-data of the requested frame"}], "tags": ["Detection", "Alert"]}}, "/alerts/{uuid}": {"parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertDetailSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknown alert"}}, "summary": "Get an alert", "description": "The following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)", "operationId": "get_alert_resource", "parameters": [{"in": "query", "name": "stix", "required": false, "type": "boolean", "description": "If set, the STIX bundle object is also returned."}, {"in": "query", "name": "comments", "required": false, "type": "boolean", "default": true, "description": "If set, comments are also returned with the alert."}, {"in": "query", "name": "history", "required": false, "type": "boolean", "default": true, "description": "If set, history are also returned with the alert."}, {"in": "query", "name": "countermeasures", "required": false, "type": "boolean", "default": true, "description": "If set, countermeasures are also returned with the alert."}, {"in": "query", "name": "cases", "required": false, "type": "boolean", "default": false, "description": "If set, some information about related cases is also returned."}], "tags": ["Detection", "Alert"]}, "patch": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertDetailSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknown alert"}}, "summary": "Patch an alert", "description": "Allows to change the type and category of the alert as well as its details and urgency.\n\nThe following permissions are required:\n - \u201cManage alerts\u201d (`0e329f9c-173f-4fa0-bbbc-fcfc4bdf7559`)", "operationId": "patch_alert_resource", "parameters": [{"in": "query", "name": "alert_type_category", "required": false, "type": "string", "minLength": 3, "maxLength": 1000, "description": "Category of the alert type"}, {"in": "query", "name": "alert_type_value", "required": false, "type": "string", "minLength": 3, "maxLength": 1000, "description": "Name of the alert type, required if `alert_type_category` is present"}, {"in": "query", "name": "details", "required": false, "type": "string", "description": "Description of the alert"}, {"in": "query", "name": "urgency", "required": false, "type": "integer", "description": "The urgency of the alert"}, {"in": "query", "name": "kill_chain_short_id", "required": false, "type": "string", "x-nullable": true, "description": "The ID of the kill chain step this alert denotes"}, {"in": "query", "name": "title", "required": false, "type": "string", "maxLength": 10000, "description": "Title of the alert"}, {"in": "query", "name": "status_uuid", "required": false, "type": "string", "enum": ["2efc4930-1442-4abb-acf2-58ba219a4fd0", "8f206505-af6d-433e-93f4-775d46dc7d0f", "1f2f88d5-ff5b-48bf-bbbc-00c2fff82d9f", "1738b1c1-767d-489e-bada-19176621a007", "4f68da89-38e0-4703-a6ab-652f02bdf24e"], "description": "UUID of the new alert status"}, {"in": "query", "name": "comment", "required": false, "type": "string", "x-nullable": true, "description": "A comment to describe why the alert was updated"}], "tags": ["Detection", "Alert"]}, "delete": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "204": {"description": "Deleted Alert"}, "404": {"description": "Unknown Alert"}}, "summary": "Delete an alert", "description": "Will delete everything related to this alert except eternal events.\n\nThe following permissions are required:\n - \u201cManage alerts\u201d (`0e329f9c-173f-4fa0-bbbc-fcfc4bdf7559`)", "operationId": "delete_alert_resource", "tags": ["Detection", "Alert"]}}, "/alerts/{uuid}/comments": {"parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertCommentSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknown alert"}}, "summary": "Post a comment on an alert", "description": "The following permissions are required:\n - \u201cComment alerts\u201d (`341436f9-1c33-4cf7-bec3-a6955133ea04`)", "operationId": "post_alert_comments_resource", "parameters": [{"in": "query", "name": "content", "required": true, "type": "string", "description": "Content of the comment"}, {"in": "query", "name": "author", "required": false, "type": "string", "maxLength": 32, "description": "Author of the comment"}], "tags": ["Detection", "Alert", "Comments"]}, "get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertCommentsSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknown alert"}}, "summary": "List the comments of an alert", "description": "The following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)", "operationId": "get_alert_comments_resource", "parameters": [{"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}], "tags": ["Detection", "Alert", "Comments"]}}, "/alerts/{uuid}/countermeasures": {"parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertCountermeasureSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknown alert"}}, "summary": "Create a new countermeasure for the alert", "description": "The following permissions are required:\n - \u201cManage alerts\u201d (`0e329f9c-173f-4fa0-bbbc-fcfc4bdf7559`)", "operationId": "post_alert_countermeasures_resource", "parameters": [{"in": "query", "name": "name", "required": true, "type": "string", "description": "The name of the countermeasure"}, {"in": "query", "name": "description", "required": false, "type": "string", "description": "The description of the countermeasure"}, {"in": "query", "name": "start_on", "required": false, "type": "string", "description": "The name of the actionstep to execute first"}, {"in": "query", "name": "relevance", "required": true, "type": "integer"}, {"in": "query", "name": "duration", "required": false, "type": "string"}, {"in": "query", "name": "actionsteps", "required": true, "collectionFormat": "multi", "type": "array", "items": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the action step that uniquely identifies it in the current course_of_action"}, "description": {"type": "string", "description": "The description of the action step"}, "type": {"type": "string", "default": "text", "enum": ["openc2", "text"], "description": "The type of the action step (e.g. `openc2`, `text`)."}, "value": {"type": "string", "description": "The content of the action step if single"}, "object": {"type": "object", "description": "The content of the action step if complex"}, "next_steps": {"type": "array", "description": "The set of named next action step(s) to execute after completion of this action step", "items": {"type": "string"}}}, "required": ["description", "name"]}}, {"in": "query", "name": "type", "required": false, "type": "string", "default": "text", "enum": ["openc2", "intelligence_center", "text"], "description": "The type of the countermeasure (e.g. `openc2`, `text`, `intelligence_center`)."}, {"in": "query", "name": "assignee", "required": false, "type": "string", "x-nullable": true, "description": "The identifier of the profile to assign to the countermeasure"}], "tags": ["Detection", "Alert", "Countermeasures"]}, "get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertCountermeasuresSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknown alert"}}, "summary": "List the countermeasures of the alert", "description": "The following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)", "operationId": "get_alert_countermeasures_resource", "parameters": [{"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}, {"in": "query", "name": "match[status]", "required": false, "type": "string", "description": "Match countermeasures according their status (separated by commas)."}, {"in": "query", "name": "sort", "required": false, "type": "string", "description": ["Sort returned tags (accepted values: 'uuid', 'name', 'relevance', 'dynamic_relevance', 'created_at')."]}, {"in": "query", "name": "direction", "required": false, "type": "string", "enum": ["asc", "desc"], "description": "Direction of the sort (accepted values: 'asc', 'desc')."}], "tags": ["Detection", "Alert", "Countermeasures"]}}, "/alerts/{uuid}/duplicate": {"parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertDetailSchema"}}, "404": {"description": "Unknown alert"}}, "summary": "Duplicate an alert, with everything related to the alert EXCEPT eternal events", "description": "The following permissions are required:\n - \u201cManage alerts\u201d (`0e329f9c-173f-4fa0-bbbc-fcfc4bdf7559`)", "operationId": "post_alert_duplicate_resource", "tags": ["Alert"]}}, "/alerts/{uuid}/history": {"parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertHistorySchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknown alert"}}, "summary": "Get the history of an alert", "description": "The following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)", "operationId": "get_alert_history_list_resource", "parameters": [{"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}, {"in": "query", "name": "community_uuid", "required": false, "type": "string", "description": "UUID of the community."}], "tags": ["Detection", "Alert"]}}, "/alerts/{uuid}/objects": {"parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ObjectsSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknown alert"}}, "summary": "List the objects of the alert", "description": "The following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)", "operationId": "get_alert_objects_resource", "parameters": [{"in": "query", "name": "limit", "required": false, "type": "integer", "default": 100, "minimum": 1, "maximum": 1000, "description": "limit a number of items (allowed range is 1-1000), default is 100."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}, {"in": "query", "name": "match[type]", "required": false, "type": "string", "description": "Match objects by their types (separated by commas)."}, {"in": "query", "name": "match[kind]", "required": false, "type": "string", "description": "Match objects by their kinds (separated by commas)."}, {"in": "query", "name": "exclude[type]", "required": false, "type": "string", "description": "Exclude objects by their type."}, {"in": "query", "name": "date[created_at]", "required": false, "type": "string", "description": "Filter objects by their creation dates (see rfc3339)."}], "tags": ["Detection", "Alert", "Objects"]}}, "/alerts/{uuid}/workflow": {"parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertStatusWorkflowSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknown alert"}}, "summary": "List the actions available to update an alert status", "description": "The following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)", "operationId": "get_alert_workflow_resource", "tags": ["Detection", "Alert", "Alert Status"]}, "patch": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertStatusWorkflowSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknown alert"}, "409": {"description": "Invalid action given current status"}}, "summary": "Trigger an action on the alert workflow", "description": "This endpoint performs an action on the alert and changes the status of the alert according to the performed\naction and the workflow.\n\nThe identifier of the action, sent in the body of the request as a json dictionary, is brought from the\nworkflow (GET request on this endpoint)\n\nThe following permissions are required:\n - \u201cUpdate alert status\u201d (`9f3df1b1-4db7-44bd-b615-af5873ad7f8a`)", "operationId": "patch_alert_workflow_resource", "parameters": [{"in": "query", "name": "action_uuid", "required": true, "type": "string", "description": "UUID of the action to trigger, or the status to set"}, {"in": "query", "name": "comment", "required": false, "type": "string", "x-nullable": true, "description": "a comment to describe why the alert status has changed"}], "tags": ["Detection", "Alert", "Alert Status"]}}, "/cases": {"post": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CaseSchema"}}, "400": {"description": "Invalid parameters"}}, "summary": "Create a new case", "description": "The following permissions are required:\n - \u201cManage cases\u201d (`e56fb404-268b-47d2-abad-d68d86ddf7bd`)", "operationId": "post_cases_resource", "parameters": [{"in": "query", "name": "title", "required": true, "type": "string", "description": "Title of the case"}, {"in": "query", "name": "description", "required": false, "type": "string", "description": "Description of the case"}, {"in": "query", "name": "status_uuid", "required": false, "type": "string", "format": "uuid", "description": "Status of the case"}, {"in": "query", "name": "community_uuid", "required": false, "type": "string", "format": "uuid", "description": "Identifier of the community"}, {"in": "query", "name": "priority", "required": false, "description": "Priority of the case", "enum": ["low", "medium", "high"]}, {"in": "query", "name": "tags", "required": false, "collectionFormat": "multi", "type": "array", "description": "List of tags to associate to the case", "items": {"type": "string"}}, {"in": "query", "name": "subscribers", "required": false, "collectionFormat": "multi", "type": "array", "description": "List of subscribers to the case", "items": {"type": "object", "properties": {"avatar_uuid": {"type": "string", "format": "uuid", "description": "Identifier of the avatar"}, "type": {"description": "Type of the subscription", "enum": ["assignee"]}}, "required": ["avatar_uuid", "type"]}}, {"in": "query", "name": "verdict_uuid", "required": false, "type": "string", "format": "uuid", "description": "Verdict of the case"}, {"in": "query", "name": "custom_status_uuid", "required": false, "type": "string", "format": "uuid", "description": "Custom status of the case"}, {"in": "query", "name": "custom_priority_uuid", "required": false, "type": "string", "format": "uuid", "description": "Custom priority of the case"}], "tags": ["Investigation", "Case"]}, "get": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Request fulfilled, document follows", "schema": {"$ref": "#/definitions/CasesSchema"}}, "400": {"description": "Invalid parameters"}}, "summary": "List cases", "description": "The following permissions are required:\n - \u201cView cases\u201d (`7c0bac3f-f2ce-491b-b663-638145078516`)", "operationId": "get_cases_resource", "parameters": [{"in": "query", "name": "date[created_at]", "required": false, "type": "string", "description": "Filter cases by their creation date (see rfc3339)."}, {"in": "query", "name": "date[last_seen_at]", "required": false, "type": "string", "description": "Filter cases by their last seen date."}, {"in": "query", "name": "match[tags]", "required": false, "type": "string", "description": "Match cases by their tags"}, {"in": "query", "name": "match[assignees]", "required": false, "type": "string", "description": "Match cases by their assigned subscribers"}, {"in": "query", "name": "match[created_by]", "required": false, "type": "string", "description": "Match cases by their creators"}, {"in": "query", "name": "match[title]", "required": false, "type": "string", "description": "Match cases by their name"}, {"in": "query", "name": "match[alert_uuid]", "required": false, "type": "string", "description": "Match cases by their associated alerts"}, {"in": "query", "name": "match[priority]", "required": false, "type": "string", "enum": ["low", "medium", "high"], "description": "Match cases by their priority (low|medium|high)"}, {"in": "query", "name": "match[custom_priority]", "required": false, "type": "string", "description": "Match cases by custom priority uuid"}, {"in": "query", "name": "match[custom_status]", "required": false, "type": "string", "description": "Match cases by custom status uuid"}, {"in": "query", "name": "match[verdict]", "required": false, "type": "string", "description": "Match cases by verdict uuid"}, {"in": "query", "name": "match[short_id]", "required": false, "type": "string", "description": "Match cases by their short ID"}, {"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Match cases by their community uuids."}, {"in": "query", "name": "community_uuid", "required": false, "type": "string", "description": "Match cases by their community uuids."}, {"in": "query", "name": "match[type]", "required": false, "type": "string", "enum": ["automatic", "manual"], "description": "Match cases by their creation mode (automatic|manual)"}, {"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}, {"in": "query", "name": "match[status_uuid]", "required": false, "type": "string", "description": "Match cases by their status uuids"}, {"in": "query", "name": "match[status_name]", "required": false, "type": "string", "description": "Match cases by their status name"}, {"in": "query", "name": "sort", "required": false, "type": "string", "description": "Sort returned cases (accepted values: 'created_at', 'title')."}, {"in": "query", "name": "direction", "required": false, "type": "string", "description": "Direction of the sort (accepted values: 'asc', 'desc')."}, {"in": "query", "name": "with_custom_statuses", "required": false, "type": "boolean", "default": false}], "tags": ["Investigation", "Case"]}}, "/cases/statistics": {"get": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CasesStatisticsSchema"}}, "400": {"description": "Invalid parameters"}}, "summary": "Get cases' statistics", "description": "The following permissions are required:\n - \u201cView cases\u201d (`7c0bac3f-f2ce-491b-b663-638145078516`)", "operationId": "get_case_statistics_resource", "parameters": [{"in": "query", "name": "date[created_at]", "required": false, "type": "string", "description": "Filter cases by their creation date (see rfc3339)."}, {"in": "query", "name": "date[last_seen_at]", "required": false, "type": "string", "description": "Filter cases by their last seen date."}, {"in": "query", "name": "match[tags]", "required": false, "type": "string", "description": "Match cases by their tags"}, {"in": "query", "name": "match[assignees]", "required": false, "type": "string", "description": "Match cases by their assigned subscribers"}, {"in": "query", "name": "match[created_by]", "required": false, "type": "string", "description": "Match cases by their creators"}, {"in": "query", "name": "match[title]", "required": false, "type": "string", "description": "Match cases by their name"}, {"in": "query", "name": "match[alert_uuid]", "required": false, "type": "string", "description": "Match cases by their associated alerts"}, {"in": "query", "name": "match[priority]", "required": false, "type": "string", "enum": ["low", "medium", "high"], "description": "Match cases by their priority (low|medium|high)"}, {"in": "query", "name": "match[custom_priority]", "required": false, "type": "string", "description": "Match cases by custom priority uuid"}, {"in": "query", "name": "match[custom_status]", "required": false, "type": "string", "description": "Match cases by custom status uuid"}, {"in": "query", "name": "match[verdict]", "required": false, "type": "string", "description": "Match cases by verdict uuid"}, {"in": "query", "name": "match[short_id]", "required": false, "type": "string", "description": "Match cases by their short ID"}, {"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Match cases by their community uuids."}, {"in": "query", "name": "community_uuid", "required": false, "type": "string", "description": "Match cases by their community uuids."}, {"in": "query", "name": "match[type]", "required": false, "type": "string", "enum": ["automatic", "manual"], "description": "Match cases by their creation mode (automatic|manual)"}], "tags": ["Investigation", "Case"]}}, "/cases/tags": {"get": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CaseTagsSchema"}}, "400": {"description": "Invalid parameters"}}, "summary": "List all tags", "description": "The following permissions are required:\n - \u201cView cases\u201d (`7c0bac3f-f2ce-491b-b663-638145078516`)", "operationId": "get_case_tags_resource", "parameters": [{"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Communities to match (separated by commas)."}, {"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}, {"in": "query", "name": "community_uuid", "required": false, "type": "string", "format": "uuid", "description": "Identifier of the community"}], "tags": ["Investigation", "Case"]}}, "/cases/{case_uuid}": {"parameters": [{"name": "case_uuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CaseSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknwon case"}}, "summary": "Get a case by its UUID", "description": "The following permissions are required:\n - \u201cView cases\u201d (`7c0bac3f-f2ce-491b-b663-638145078516`)", "operationId": "get_case_resource", "parameters": [{"in": "query", "name": "community_uuid", "required": false, "type": "string", "format": "uuid", "description": "Identifier of the community"}], "tags": ["Investigation", "Case"]}, "patch": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CaseSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknwon case"}}, "summary": "Update a case", "description": "The following permissions are required:\n - \u201cManage cases\u201d (`e56fb404-268b-47d2-abad-d68d86ddf7bd`)", "operationId": "patch_case_resource", "parameters": [{"in": "query", "name": "title", "required": false, "type": "string", "description": "Title of the case"}, {"in": "query", "name": "description", "required": false, "type": "string", "description": "Description of the case"}, {"in": "query", "name": "status_uuid", "required": false, "type": "string", "format": "uuid", "description": "Identifier of the status of the case"}, {"in": "query", "name": "status_name", "required": false, "type": "string", "description": "Name of the status of the case"}, {"in": "query", "name": "priority", "required": false, "default": null, "x-nullable": true, "description": "Priority of the case", "enum": ["low", "medium", "high"]}, {"in": "query", "name": "tags", "required": false, "collectionFormat": "multi", "type": "array", "description": "List of tags to associate to the case", "items": {"type": "string"}}, {"in": "query", "name": "subscribers", "required": false, "collectionFormat": "multi", "type": "array", "description": "List of subscribers to the case", "items": {"type": "object", "properties": {"avatar_uuid": {"type": "string", "format": "uuid", "description": "Identifier of the avatar"}, "type": {"description": "Type of the subscription", "enum": ["assignee"]}}, "required": ["avatar_uuid", "type"]}}, {"in": "query", "name": "verdict_uuid", "required": false, "type": "string", "format": "uuid", "description": "Verdict of the case"}, {"in": "query", "name": "custom_status_uuid", "required": false, "type": "string", "format": "uuid", "description": "Custom status of the case"}, {"in": "query", "name": "custom_priority_uuid", "required": false, "type": "string", "format": "uuid", "description": "Priority of the case"}], "tags": ["Investigation", "Case"]}, "delete": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "204": {"description": "Deleted Case"}, "404": {"description": "Unknown Case"}}, "summary": "Delete a case", "description": "Will delete everything related to this case.\n\nThe following permissions are required:\n - \u201cManage cases\u201d (`e56fb404-268b-47d2-abad-d68d86ddf7bd`)", "operationId": "delete_case_resource", "tags": ["Investigation", "Case"]}}, "/cases/{case_uuid}/alerts": {"parameters": [{"name": "case_uuid", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AddedAlertsSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknwon case or alert"}}, "summary": "Replace the associated alerts to a case", "description": "The following permissions are required:\n - \u201cManage cases\u201d (`e56fb404-268b-47d2-abad-d68d86ddf7bd`)", "operationId": "post_case_alerts_resource", "parameters": [{"in": "query", "name": "alerts", "required": true, "collectionFormat": "multi", "type": "array", "description": "The list of identifiers of alerts to add", "items": {"type": "string"}}], "tags": ["Investigation", "Case", "Alert"]}, "get": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Request fulfilled, document follows", "schema": {"$ref": "#/definitions/AlertsCaseSchema"}}, "400": {"description": "Invalid parameters"}}, "summary": "List alerts associated to the targeted case", "description": "The following permissions are required:\n - \u201cView cases\u201d (`7c0bac3f-f2ce-491b-b663-638145078516`)", "operationId": "get_case_alerts_resource", "parameters": [{"in": "query", "name": "match[alert_stix_object]", "required": false, "type": "string", "description": "Match alerts that contain requested STIX objects IDs"}, {"in": "query", "name": "match[alert_rule_uuid]", "required": false, "type": "string", "description": "Match alerts by their rules' UUIDs (separated by commas)."}, {"in": "query", "name": "match[alert_asset_uuid]", "required": false, "type": "string", "description": "Match alerts for specific assets (separated by commas)."}, {"in": "query", "name": "date[first_seen_at]", "required": false, "type": "string", "description": "Filter cases by their first seen date."}, {"in": "query", "name": "nomatch[alert_asset_uuid]", "required": false, "type": "string", "description": "Exclude alerts for specific assets (separated by commas)."}, {"in": "query", "name": "nomatch[alert_rule_uuid]", "required": false, "type": "string", "description": "Exclude alerts for specific rules (separated by commas)."}, {"in": "query", "name": "nomatch[alert_stix_object]", "required": false, "type": "string", "description": "Exclude alerts for specific threats (separated by commas)."}, {"in": "query", "name": "similarity_strategy", "required": false, "type": "boolean", "default": false, "description": "If set, similarity strategy is also returned with the alerts."}], "tags": ["Investigation", "Case", "Alert"]}, "patch": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AddedAlertsSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknwon case or alert"}}, "summary": "Associate new alerts on a case", "description": "The following permissions are required:\n - \u201cManage cases\u201d (`e56fb404-268b-47d2-abad-d68d86ddf7bd`)", "operationId": "patch_case_alerts_resource", "parameters": [{"in": "query", "name": "alerts", "required": true, "collectionFormat": "multi", "type": "array", "description": "The list of identifiers of alerts to add", "items": {"type": "string"}}], "tags": ["Investigation", "Case", "Alert"]}}, "/cases/{case_uuid}/assets": {"parameters": [{"name": "case_uuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CaseAssetsSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknwon case"}}, "summary": "List assets uuids associated with a given case's alerts", "description": "The following permissions are required:\n - \u201cView cases\u201d (`7c0bac3f-f2ce-491b-b663-638145078516`)", "operationId": "get_case_assets_resource", "tags": ["Investigation", "Case", "Assets"]}}, "/cases/{case_uuid}/comments": {"parameters": [{"name": "case_uuid", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CaseCommentSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknwon case"}}, "summary": "Create a new comment on a case", "description": "The following permissions are required:\n - \u201cManage cases\u201d (`e56fb404-268b-47d2-abad-d68d86ddf7bd`)", "operationId": "post_case_comments_resource", "parameters": [{"in": "query", "name": "content", "required": true, "type": "string", "description": "content of the comment"}], "tags": ["Investigation", "Case", "Comments"]}, "get": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CaseCommentsSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknwon case"}}, "summary": "List all comments of a case", "description": "The following permissions are required:\n - \u201cView cases\u201d (`7c0bac3f-f2ce-491b-b663-638145078516`)", "operationId": "get_case_comments_resource", "parameters": [{"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}, {"in": "query", "name": "date[created_at]", "required": false, "type": "string", "description": "Filter cases by their creation date (see rfc3339)."}, {"in": "query", "name": "match[created_by]", "required": false, "type": "string", "description": "Match cases by their creators"}, {"in": "query", "name": "sort", "required": false, "type": "string", "description": "Sort returned comments (accepted values: 'created_at', 'created_by', 'updated_at')."}, {"in": "query", "name": "direction", "required": false, "type": "string", "description": "Direction of the sort (accepted values: 'asc', 'desc')."}], "tags": ["Investigation", "Case", "Comments"]}}, "/cases/{case_uuid}/comments/{comment_uuid}": {"parameters": [{"name": "case_uuid", "in": "path", "required": true, "type": "string"}, {"name": "comment_uuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CaseCommentSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknwon case or comment"}}, "summary": "Get a case's comment by its UUID", "description": "The following permissions are required:\n - \u201cView cases\u201d (`7c0bac3f-f2ce-491b-b663-638145078516`)", "operationId": "get_case_comment_resource", "tags": ["Investigation", "Case", "Comments"]}, "patch": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CaseCommentSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknwon case or comment"}}, "summary": "Update a case's comment by its UUID", "description": "The following permissions are required:\n - \u201cManage cases\u201d (`e56fb404-268b-47d2-abad-d68d86ddf7bd`)", "operationId": "patch_case_comment_resource", "parameters": [{"in": "query", "name": "content", "required": false, "type": "string", "description": "content of the comment"}], "tags": ["Investigation", "Case", "Comments"]}, "delete": {"responses": {"204": {"description": "Success"}, "401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "404": {"description": "Unknwon case or comment"}}, "summary": "Delete a comment from a case", "description": "The following permissions are required:\n - \u201cManage cases\u201d (`e56fb404-268b-47d2-abad-d68d86ddf7bd`)", "operationId": "delete_case_comment_resource", "tags": ["Investigation", "Case", "Comments"]}}, "/cases/{case_uuid}/entities": {"parameters": [{"name": "case_uuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CaseEntitiesSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknwon case"}}, "summary": "List entities associated with a given case's alerts", "description": "The following permissions are required:\n - \u201cView cases\u201d (`7c0bac3f-f2ce-491b-b663-638145078516`)", "operationId": "get_case_entities_resource", "tags": ["Detection", "Alert Entities"]}}, "/cases/{case_uuid}/events/{event_id}": {"parameters": [{"name": "case_uuid", "in": "path", "required": true, "type": "string"}, {"name": "event_id", "in": "path", "required": true, "type": "string"}], "delete": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "204": {"description": "Event removed from case"}, "404": {"description": "Unknown case"}}, "summary": "Remove an event from a case", "description": "The `event_id` should be taken from the `event.id` field.\n\nThe following permissions are required:\n - \u201cManage cases\u201d (`e56fb404-268b-47d2-abad-d68d86ddf7bd`)", "operationId": "delete_case_event_resource", "tags": ["Investigation", "Case"]}}, "/cases/{case_uuid}/history": {"parameters": [{"name": "case_uuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CaseHistoryListSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknwon case"}}, "summary": "Get the history of a case", "description": "The following permissions are required:\n - \u201cView cases\u201d (`7c0bac3f-f2ce-491b-b663-638145078516`)", "operationId": "get_case_history_resource", "parameters": [{"in": "query", "name": "date[created_at]", "required": false, "type": "string", "description": "Filter cases by their creation date (see rfc3339)."}, {"in": "query", "name": "direction", "required": false, "type": "string", "description": "Direction of the sort (accepted values: 'asc', 'desc')."}], "tags": ["Investigation", "Case", "Assets"]}}, "/cases/{case_uuid}/kill-chains": {"parameters": [{"name": "case_uuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CaseKillChainSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknwon case"}}, "summary": "List kill chain short id associated with a case's alerts", "description": "The following permissions are required:\n - \u201cView cases\u201d (`7c0bac3f-f2ce-491b-b663-638145078516`)", "operationId": "get_case_kill_chains_resource", "tags": ["Detection", "Cyber Kill Chain"]}}, "/cases/{case_uuid}/rules": {"parameters": [{"name": "case_uuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CaseRulesSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknwon case"}}, "summary": "List rules associated with alerts within a case", "description": "The following permissions are required:\n - \u201cView cases\u201d (`7c0bac3f-f2ce-491b-b663-638145078516`)", "operationId": "get_case_rules_resource", "tags": ["Detection", "Rules"]}}, "/cases/{case_uuid}/threats": {"parameters": [{"name": "case_uuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CaseThreatsSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknwon case"}}, "summary": "List threats associated with alerts within a case", "description": "The following permissions are required:\n - \u201cView cases\u201d (`7c0bac3f-f2ce-491b-b663-638145078516`)", "operationId": "get_case_threats_resource", "tags": ["Investigation", "Case", "Threats"]}}, "/cases/{uuid}/countermeasures": {"parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CaseCountermeasureSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknown case"}}, "summary": "Create a new countermeasure for the case", "description": "The following permissions are required:\n - \u201cManage cases\u201d (`e56fb404-268b-47d2-abad-d68d86ddf7bd`)", "operationId": "post_case_countermeasures_resource", "parameters": [{"in": "query", "name": "name", "required": true, "type": "string", "description": "The name of the countermeasure"}, {"in": "query", "name": "description", "required": false, "type": "string", "description": "The description of the countermeasure"}, {"in": "query", "name": "start_on", "required": false, "type": "string", "description": "The name of the actionstep to execute first"}, {"in": "query", "name": "relevance", "required": true, "type": "integer"}, {"in": "query", "name": "duration", "required": false, "type": "string"}, {"in": "query", "name": "actionsteps", "required": true, "collectionFormat": "multi", "type": "array", "items": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the action step that uniquely identifies it in the current course_of_action"}, "description": {"type": "string", "description": "The description of the action step"}, "type": {"type": "string", "default": "text", "enum": ["openc2", "text"], "description": "The type of the action step (e.g. `openc2`, `text`)."}, "value": {"type": "string", "description": "The content of the action step if single"}, "object": {"type": "object", "description": "The content of the action step if complex"}, "next_steps": {"type": "array", "description": "The set of named next action step(s) to execute after completion of this action step", "items": {"type": "string"}}}, "required": ["description", "name"]}}, {"in": "query", "name": "type", "required": false, "type": "string", "default": "text", "enum": ["openc2", "intelligence_center", "text"], "description": "The type of the countermeasure (e.g. `openc2`, `text`, `intelligence_center`)."}, {"in": "query", "name": "assignee", "required": false, "type": "string", "x-nullable": true, "description": "The identifier of the profile to assign to the countermeasure"}], "tags": ["Investigation", "Case", "Countermeasures"]}, "get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CaseCountermeasuresSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknown case"}}, "summary": "List the countermeasures of the case", "description": "The following permissions are required:\n - \u201cView cases\u201d (`7c0bac3f-f2ce-491b-b663-638145078516`)", "operationId": "get_case_countermeasures_resource", "parameters": [{"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}], "tags": ["Investigation", "Case", "Countermeasures"]}}, "/cases/{uuid}/events": {"parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "204": {"description": "Events Added"}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknown case or events"}}, "summary": "Add events to a case", "description": "Events are refered to by their `__event_id`.\n\nThe following permissions are required:\n - \u201cManage cases\u201d (`e56fb404-268b-47d2-abad-d68d86ddf7bd`)", "operationId": "post_case_events_resource", "parameters": [{"in": "query", "name": "event_ids", "required": true, "collectionFormat": "multi", "type": "array", "description": "List of event identifiers to add to the case", "items": {"type": "string"}}], "tags": ["Investigation", "Case"]}}, "/comments": {"get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CommentsSchema"}}, "400": {"description": "Invalid parameters"}}, "summary": "List comments", "description": "The following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)", "operationId": "get_comments_resource", "parameters": [{"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Communities to match (separated by commas)."}, {"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}, {"in": "query", "name": "match[author]", "required": false, "type": "string", "description": "Match comments by their author"}, {"in": "query", "name": "match[type]", "required": false, "type": "string", "description": "Match comments by their type (accepted values: 'countermeasure_comment', 'alert_comment', 'history_comment', 'case_comment')"}, {"in": "query", "name": "date[created_at]", "required": false, "type": "string", "description": "Filter comments by their creation dates (see rfc3339)."}, {"in": "query", "name": "date[updated_at]", "required": false, "type": "string", "description": "Filter comments by their modification dates (see rfc3339)."}, {"in": "query", "name": "sort", "required": false, "description": "Field to sort returned comments", "enum": ["created_at", "updated_at", "type", "author"]}, {"in": "query", "name": "direction", "required": false, "type": "string", "description": "Direction of the sort (accepted values: 'asc', 'desc')."}], "tags": ["Investigation", "Comments"]}}, "/custom_priorities": {"post": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Request fulfilled, document follows", "schema": {"$ref": "#/definitions/CustomPrioritySchema"}}, "400": {"description": "Invalid parameters"}}, "summary": "Create a new custom priority", "description": "The following permissions are required:\n - \u201cManage cases\u201d (`e56fb404-268b-47d2-abad-d68d86ddf7bd`)", "operationId": "post_custom_priorities_resource", "parameters": [{"in": "query", "name": "description", "required": true, "type": "string", "description": "Description of the custom priority"}, {"in": "query", "name": "color", "required": true, "type": "string", "description": "Color the priority will be displayed in"}, {"in": "query", "name": "label", "required": true, "type": "string", "description": "Label (name) of the custom priority"}, {"in": "query", "name": "level", "required": true, "type": "integer", "description": "Level (position) of the custom priority"}], "tags": ["Investigation", "Case"]}, "get": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Request fulfilled, document follows", "schema": {"$ref": "#/definitions/ListCustomPrioritiesSchema"}}, "400": {"description": "Invalid parameters"}}, "summary": "List all custom priorities", "description": "The following permissions are required:\n - \u201cView cases\u201d (`7c0bac3f-f2ce-491b-b663-638145078516`)", "operationId": "get_custom_priorities_resource", "parameters": [{"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}], "tags": ["Investigation", "Case"]}}, "/custom_priorities/levels": {"patch": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknwon custom priority"}}, "summary": "Update the levels of the custom priorities", "description": "Levels are used to order the custom priority in the UI\n\nThe following permissions are required:\n - \u201cManage cases\u201d (`e56fb404-268b-47d2-abad-d68d86ddf7bd`)", "operationId": "patch_custom_priorities_levels_resource", "parameters": [{"in": "query", "name": "levels", "required": true, "type": "object", "description": "New levels of the custom priorities", "additionalProperties": {"type": "integer"}}], "tags": ["Investigation", "Case"]}}, "/custom_priorities/{uuid}": {"parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Request fulfilled, document follows", "schema": {"$ref": "#/definitions/CustomPrioritySchema"}}, "404": {"description": "Unknwon custom priority"}}, "summary": "Get a single custom priority based on its UUID", "description": "The following permissions are required:\n - \u201cView cases\u201d (`7c0bac3f-f2ce-491b-b663-638145078516`)", "operationId": "get_custom_priority_resource", "tags": ["Investigation", "Case"]}, "patch": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Request fulfilled, document follows", "schema": {"$ref": "#/definitions/CustomPrioritySchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknwon custom priority"}}, "summary": "Edit an existing custom priority based on its UUID", "description": "The following permissions are required:\n - \u201cManage cases\u201d (`e56fb404-268b-47d2-abad-d68d86ddf7bd`)", "operationId": "patch_custom_priority_resource", "parameters": [{"in": "query", "name": "description", "required": false, "type": "string", "description": "Description of the custom priority"}, {"in": "query", "name": "color", "required": false, "type": "string", "description": "Color the priority will be displayed in"}, {"in": "query", "name": "label", "required": false, "type": "string", "description": "Label (name) of the custom priority"}, {"in": "query", "name": "level", "required": false, "type": "integer", "description": "Level (position) of the custom priority"}], "tags": ["Investigation", "Case"]}, "delete": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "204": {"description": "Deleted custom priority"}, "400": {"description": "Cannot delete the last custom priority"}, "404": {"description": "Unknown custom priority"}}, "summary": "Delete a custom priority based on its UUID", "description": "The last custom priority can't be deleted\nIf the custom priority is the last one, a 400 error is returned\n\nThe following permissions are required:\n - \u201cManage cases\u201d (`e56fb404-268b-47d2-abad-d68d86ddf7bd`)", "operationId": "delete_custom_priority_resource", "tags": ["Investigation", "Case"]}}, "/custom_statuses": {"post": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Request fulfilled, document follows", "schema": {"$ref": "#/definitions/CustomStatusSchema"}}, "400": {"description": "Invalid parameters"}}, "summary": "Create a new custom status", "description": "The following permissions are required:\n - \u201cManage cases\u201d (`e56fb404-268b-47d2-abad-d68d86ddf7bd`)", "operationId": "post_custom_statuses_resource", "parameters": [{"in": "query", "name": "description", "required": true, "type": "string", "description": "Description of the custom status"}, {"in": "query", "name": "stage", "required": true, "description": "Stage of the custom status", "enum": ["open", "closed", "in_progress"]}, {"in": "query", "name": "label", "required": true, "type": "string", "description": "Label (name) of the custom status"}, {"in": "query", "name": "level", "required": true, "type": "integer", "description": "Level (position) of the custom status"}], "tags": ["Investigation", "Case"]}, "get": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Request fulfilled, document follows", "schema": {"$ref": "#/definitions/ListCustomStatusesSchema"}}, "400": {"description": "Invalid parameters"}}, "summary": "List all custom statuses", "description": "The following permissions are required:\n - \u201cView cases\u201d (`7c0bac3f-f2ce-491b-b663-638145078516`)", "operationId": "get_custom_statuses_resource", "parameters": [{"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}], "tags": ["Investigation", "Case"]}}, "/custom_statuses/levels": {"patch": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknwon custom status"}}, "summary": "Update the levels of the custom statuses", "description": "Levels are used to order the custom status in the UI\n\nThe following permissions are required:\n - \u201cManage cases\u201d (`e56fb404-268b-47d2-abad-d68d86ddf7bd`)", "operationId": "patch_custom_statuses_levels_resource", "parameters": [{"in": "query", "name": "levels", "required": true, "type": "object", "description": "New levels of the custom statuses", "additionalProperties": {"type": "integer"}}], "tags": ["Investigation", "Case"]}}, "/custom_statuses/{uuid}": {"parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Request fulfilled, document follows", "schema": {"$ref": "#/definitions/CustomStatusSchema"}}, "404": {"description": "Unknwon custom status"}}, "summary": "Get a custom status based on its UUID", "description": "The following permissions are required:\n - \u201cView cases\u201d (`7c0bac3f-f2ce-491b-b663-638145078516`)", "operationId": "get_custom_status_resource", "tags": ["Investigation", "Case"]}, "patch": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Request fulfilled, document follows", "schema": {"$ref": "#/definitions/CustomStatusSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknwon custom status"}}, "summary": "Edit an existing custom status based on its UUID", "description": "The following permissions are required:\n - \u201cManage cases\u201d (`e56fb404-268b-47d2-abad-d68d86ddf7bd`)", "operationId": "patch_custom_status_resource", "parameters": [{"in": "query", "name": "description", "required": false, "type": "string", "description": "Description of the custom status"}, {"in": "query", "name": "label", "required": false, "type": "string", "description": "Label (name) of the custom status"}, {"in": "query", "name": "level", "required": false, "type": "integer", "description": "Level (position) of the custom status"}], "tags": ["Investigation", "Case"]}, "delete": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "204": {"description": "Deleted custom status"}, "400": {"description": "Cannot delete the last custom status"}, "404": {"description": "Unknown custom status"}}, "summary": "Delete a custom status based on its UUID", "description": "The last custom status can't be deleted\nIf the custom status is the last one, a 400 error is returned\n\nThe following permissions are required:\n - \u201cManage cases\u201d (`e56fb404-268b-47d2-abad-d68d86ddf7bd`)", "operationId": "delete_custom_status_resource", "tags": ["Investigation", "Case"]}}, "/custom_verdicts": {"post": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Request fulfilled, document follows", "schema": {"$ref": "#/definitions/CustomVerdictSchema"}}, "400": {"description": "Invalid parameters"}}, "summary": "Create a new custom verdict", "description": "The following permissions are required:\n - \u201cManage cases\u201d (`e56fb404-268b-47d2-abad-d68d86ddf7bd`)", "operationId": "post_custom_verdicts_resource", "parameters": [{"in": "query", "name": "description", "required": true, "type": "string", "description": "Description of the custom verdict"}, {"in": "query", "name": "stage", "required": true, "description": "Stage of the custom verdict (open|in_progress|closed)"}, {"in": "query", "name": "label", "required": true, "type": "string", "description": "Label (name) of the custom verdict"}, {"in": "query", "name": "level", "required": true, "type": "integer", "description": "Level (position) of the custom verdict"}], "tags": ["Investigation", "Case"]}, "get": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Request fulfilled, document follows", "schema": {"$ref": "#/definitions/ListCustomVerdictsSchema"}}, "400": {"description": "Invalid parameters"}}, "summary": "List all custom verdicts", "description": "The following permissions are required:\n - \u201cView cases\u201d (`7c0bac3f-f2ce-491b-b663-638145078516`)", "operationId": "get_custom_verdicts_resource", "parameters": [{"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}], "tags": ["Investigation", "Case"]}}, "/custom_verdicts/levels": {"patch": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknwon custom verdict"}}, "summary": "Update the levels of the custom verdicts", "description": "Levels are used to order the custom verdict in the UI\n\nThe following permissions are required:\n - \u201cManage cases\u201d (`e56fb404-268b-47d2-abad-d68d86ddf7bd`)", "operationId": "patch_custom_verdicts_levels_resource", "parameters": [{"in": "query", "name": "levels", "required": true, "type": "object", "description": "New levels of the custom verdicts", "additionalProperties": {"type": "integer"}}], "tags": ["Investigation", "Case"]}}, "/custom_verdicts/{uuid}": {"parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Request fulfilled, document follows", "schema": {"$ref": "#/definitions/CustomVerdictSchema"}}, "404": {"description": "Unknwon custom verdict"}}, "summary": "Get a single custom verdict based on its UUID", "description": "The following permissions are required:\n - \u201cView cases\u201d (`7c0bac3f-f2ce-491b-b663-638145078516`)", "operationId": "get_custom_verdict_resource", "tags": ["Investigation", "Case"]}, "patch": {"responses": {"401": {"description": "Authentication required"}, "403": {"description": "Permissions required"}, "200": {"description": "Request fulfilled, document follows", "schema": {"$ref": "#/definitions/CustomVerdictSchema"}}, "400": {"description": "Invalid parameters"}, "404": {"description": "Unknwon custom verdict"}}, "summary": "Edit an existing custom verdict based on its UUID", "description": "The following permissions are required:\n - \u201cManage cases\u201d (`e56fb404-268b-47d2-abad-d68d86ddf7bd`)", "operationId": "patch_custom_verdict_resource", "parameters": [{"in": "query", "name": "description", "required": false, "type": "string", "description": "Description of the custom verdict"}, {"in": "query", "name": "label", "required": false, "type": "string", "description": "Label (name) of the custom verdict"}, {"in": "query", "name": "level", "required": false, "type": "integer", "description": "Level (position) of the custom verdict"}], "tags": ["Investigation", "Case"]}, "delete": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "204": {"description": "Deleted custom verdict"}, "400": {"description": "Cannot delete the last custom verdict"}, "404": {"description": "Unknown custom verdict"}}, "summary": "Delete a custom verdict based on its UUID", "description": "The last custom verdict can't be deleted\nIf the custom verdict is the last one, a 400 error is returned\n\nThe following permissions are required:\n - \u201cManage cases\u201d (`e56fb404-268b-47d2-abad-d68d86ddf7bd`)", "operationId": "delete_custom_verdict_resource", "tags": ["Investigation", "Case"]}}, "/kill-chains": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertKillChainsSchema"}}, "401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}}, "summary": "List Cyber Kill Chain Stages", "description": "The cyber kill chain (developed by Lockheed Martin) is an industry-accepted framework to\n describe and model the stages of an offensive cyber activity. An effective understanding of\nthe cyber kill chain greatly assists the information security professional in\n establishing the adversary\u2019s tactics, techniques and procedures (TTPs).\n\nThe cyber kill chain is denoted by 7 steps:\n1. Reconnaissance: Intruder selects target, researches it, and attempts to identify\n vulnerabilities in the target network.\n2. Weaponization: Intruder creates remote access malware weapon, such as a virus or\n worm, tailored to one or more vulnerabilities.\n3. Delivery: Intruder transmits weapon to target (e.g., via e-mail attachments,\n websites or USB drives).\n4. Exploitation: Malware weapon's program code triggers, which takes action\n on target network to exploit vulnerability.\n5. Installation: Malware weapon installs access point (e.g., \"backdoor\") usable by intruder.\n6. Command and Control: Malware enables intruder to have \"hands on the\n keyboard\" persistent access to target network.\n7. Actions on Objective: Intruder takes action to achieve their goals,\n such as data exfiltration, data destruction, or encryption for ransom.\n\nThis endpoint can be use to retrieve the different stages of the Cyber Kill Chain.\n\nA stage is denoted by its unique identifier (`uuid`), its `name` and `description`.\nIn addition, every stage can be refered to by its `short_id`.\n\nFor example, the following denotes the **Reconnaissance** stage:\n```\n{\n    'uuid': '73708d4f-419f-44aa-b505-288b522f9c30',\n    'name': 'Reconnaissance',\n    'description': 'Intruder selects target, researches it, and attempts to identify vulnerabilities.',\n    'short_id': 'KCXKNfnJupq5'\n}\n```\n\nThe following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)", "operationId": "get_alert_kill_chain_resources", "parameters": [{"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}, {"in": "query", "name": "match[name]", "required": false, "type": "string", "description": "Match kill chain by their names (separated by commas)."}, {"in": "query", "name": "match[short_id]", "required": false, "type": "string", "description": "Match kill chain by their short_ids (separated by commas)."}], "tags": ["Detection", "Alert", "Cyber Kill Chain"]}}, "/kill-chains/{uuid}": {"parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertKillChainSchema"}}, "401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}}, "summary": "Get a Cyber Kill Chain Stage", "description": "This endpoint can be use to retrieve the definition of\na Cyber Kill Chain Step following either its unique identifier or its short id (`uuid`).\n\nThe following permissions are required:\n - \u201cView alerts\u201d (`9ea2b8a3-593f-4bab-92f5-d0af9b563f6f`)", "operationId": "get_alert_kill_chain_resource", "tags": ["Detection", "Alert", "Cyber Kill Chain"]}}, "/statistics/alerts": {"get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertStatsSchema"}}, "400": {"description": "Invalid Parameters"}}, "summary": "Get statistics on alerts", "description": "(deprecated)\n\nThis endpoint fetches statistics (counters, kris, and datasets) on all the alerts that were produced\nin a time frame. Time frame must be specified with `created_at` parameter.\n\nThe following permissions are required:\n - \u201cView alert statistics\u201d (`b1642ef8-4bc0-40b4-9ddf-7bd368659941`)", "operationId": "get_alert_stats_resource", "parameters": [{"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Communities to match (separated by commas)."}, {"in": "query", "name": "date[created_at]", "required": true, "type": "string", "description": "Filter on alert creation date (see rfc3339)"}], "tags": ["Statistics"]}}, "/statistics/alerts/adversaries": {"get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertThreatsCounterSchema"}}, "400": {"description": "Invalid Parameters"}}, "summary": "Get alert count by Adversarie", "description": "Get number of alerts per `threat-actor`, `intrusion-set`, `campaign`, `infrastructure`.\n\nThis endpoint will search known Adversaries in all alerts\nconcerned by the date range to compute statistics about them.\n\nThe following permissions are required:\n - \u201cView alert statistics\u201d (`b1642ef8-4bc0-40b4-9ddf-7bd368659941`)", "operationId": "get_alert_adversaries_counter_total_resource", "parameters": [{"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Communities to match (separated by commas)."}, {"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}, {"in": "query", "name": "date[created_at]", "required": false, "type": "string", "description": "Filter alerts by their creation dates (see rfc3339)."}], "tags": ["Reporting", "Statistics", "Alert"]}}, "/statistics/alerts/assets/counters": {"get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertCountersPerAssetsSchema"}}, "400": {"description": "Invalid Parameters"}}, "summary": "Get counters on alerts indexed by assets", "description": "(deprecated)\n\nThis paginated endpoint lists counters over a given time frame indexed by assets.\nA set of filters can be specified to focus on certain assets.\n\nOne can filter statistics given\n* the time frame to consider, through the required `created_at` parameter\n* the asset the statistics refers to (`match[asset_uuid]`)\n\nOnly assets with alerts over the requested time frame\nare guaranteed to be included in the response.\nAssets with no alert may or may not be considered.\n\nAssets can be sorted given\n* their number of alerts (`sort=total`),\n* their uuid (`sort=asset_uuid`).\n\nOne can sort ascending or descending by specifing `direction=asc` or `direction=desc`.\n\nWhen using pagination over several consecutive requests, keep in mind that alerts and assets\nmay be created between two consecutive requests, resulting in duplicated or missing assets\nwhen merging responses.\nTo avoid this problem, future time in the `created_at` parameter\nshould be avoided.\n\nThe following permissions are required:\n - \u201cView alert statistics\u201d (`b1642ef8-4bc0-40b4-9ddf-7bd368659941`)", "operationId": "get_alert_assets_counter_total_resource", "parameters": [{"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Communities to match (separated by commas)."}, {"in": "query", "name": "date[created_at]", "required": true, "type": "string", "description": "Filter on alert creation date (see rfc3339)"}, {"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}, {"in": "query", "name": "match[asset_uuid]", "required": true, "type": "string", "description": "Match alerts by their asset uuids (separated by commas)."}], "tags": ["Statistics"]}}, "/statistics/alerts/counters": {"get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertCountersSchema"}}, "400": {"description": "Invalid Parameters"}}, "summary": "Get counters on alerts", "description": "(deprecated)\n\nThis endpoint fetches counters on all the alerts that were produced\nin a time frame. Time frame must be specified with `created_at` parameter.\n\nThe following permissions are required:\n - \u201cView alert statistics\u201d (`b1642ef8-4bc0-40b4-9ddf-7bd368659941`)", "operationId": "get_alert_counter_total_resource", "parameters": [{"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Communities to match (separated by commas)."}, {"in": "query", "name": "date[created_at]", "required": true, "type": "string", "description": "Filter on alert creation date (see rfc3339)"}], "tags": ["Statistics"]}}, "/statistics/alerts/entities": {"get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertStatsPerEntitiesSchema"}}, "400": {"description": "Invalid Parameters"}}, "summary": "Get statistics on alerts indexed by entities", "description": "(deprecated)\n\nThis paginated endpoint lists statistics over a given time frame indexed by entities.\nA set of filters can be specified to focus on certain entities.\n\nOne can filter statistics given:\n* the time frame to consider, through the required `created_at` parameter\n* the entity the statistics refers to (`match[entity_uuid]`)\n\nOnly entities with alerts or non-null ARI over the requested time frame\nare guaranteed to be included in the response.\nEntities with no alert and null ARI may or may not be considered.\n\nWhen using pagination over several consecutive requests, keep in mind that alerts and entities\nmay be created between two consecutive requests, resulting in duplicated or missing entities\nwhen merging responses.\nTo avoid this problem, future time in the `created_at` parameter\nand ordering according to maximal alert risk indicator should be avoided.\n\nThe following permissions are required:\n - \u201cView alert statistics\u201d (`b1642ef8-4bc0-40b4-9ddf-7bd368659941`)", "operationId": "get_alert_entities_stats_resource", "parameters": [{"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Communities to match (separated by commas)."}, {"in": "query", "name": "date[created_at]", "required": true, "type": "string", "description": "Filter on alert creation date (see rfc3339)"}, {"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}, {"in": "query", "name": "match[entity_name]", "required": false, "type": "string", "description": "Match alerts by their entity names (separated by commas)."}, {"in": "query", "name": "match[entity_uuid]", "required": false, "type": "string", "description": "Match alerts by their entity uuids (separated by commas)."}], "tags": ["Statistics"]}}, "/statistics/alerts/entities/counters": {"get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertCountersPerEntitiesSchema"}}, "400": {"description": "Invalid Parameters"}}, "summary": "Get counters on alerts indexed by entities", "description": "(deprecated)\n\nThis paginated endpoint lists counters over a given time frame indexed by entities.\nA set of filters can be specified to focus on certain entities.\n\nOne can filter statistics given\n* the time frame to consider, through the required `created_at` parameter\n* the entity the statistics refers to (`match[entity_name]` and `match[entity_uuid]`)\n\nOnly entities with alerts over the requested time frame\nare guaranteed to be included in the response.\nEntities with no alert may or may not be considered.\n\nEntities can be sorted given\n* their number of alerts (`sort=total`),\n* their name (`sort=entity_name`)\n\nOne can sort ascending or descending by specifing `direction=asc` or `direction=desc`.\n\nWhen using pagination over several consecutive requests, keep in mind that alerts and entities\nmay be created between two consecutive requests, resulting in duplicated or missing entities\nwhen merging responses.\nTo avoid this problem, future time in the `created_at` parameter\nshould be avoided.\n\nThe following permissions are required:\n - \u201cView alert statistics\u201d (`b1642ef8-4bc0-40b4-9ddf-7bd368659941`)", "operationId": "get_alert_entities_counter_total_resource", "parameters": [{"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Communities to match (separated by commas)."}, {"in": "query", "name": "date[created_at]", "required": true, "type": "string", "description": "Filter on alert creation date (see rfc3339)"}, {"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}, {"in": "query", "name": "match[entity_name]", "required": false, "type": "string", "description": "Match alerts by their entity names (separated by commas)."}, {"in": "query", "name": "match[entity_uuid]", "required": false, "type": "string", "description": "Match alerts by their entity uuids (separated by commas)."}], "tags": ["Statistics"]}}, "/statistics/alerts/kris": {"get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertKRIsSchema"}}, "400": {"description": "Invalid Parameters"}}, "summary": "Get Key Risk Indicators at a given date", "description": "(deprecated)\n\nThe following permissions are required:\n - \u201cView alert statistics\u201d (`b1642ef8-4bc0-40b4-9ddf-7bd368659941`)", "operationId": "get_alert_kris_resource", "parameters": [{"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Communities to match (separated by commas)."}, {"in": "query", "name": "date", "required": true, "type": "string", "format": "date-time", "description": "Date for which indicators are requested (see rfc3339)"}], "tags": ["Statistics"]}}, "/statistics/alerts/soc_kpis": {"get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SOCKPIsSchema"}}, "400": {"description": "Invalid Parameters"}}, "summary": "Get the SOC key performance indicators on your alerts including:", "description": "- the mean time to ingest\n- the mean time to detect\n- the mean time to acknowledge\n- the mean time to respond\n- the mean time to resolve\n\nOne can filter alerts given their creation date (`date[created_at]`).\n\nThe following permissions are required:\n - \u201cView alert statistics\u201d (`b1642ef8-4bc0-40b4-9ddf-7bd368659941`)", "operationId": "get_sockp_is_resource", "parameters": [{"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Communities to match (separated by commas)."}, {"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}, {"in": "query", "name": "date[created_at]", "required": false, "type": "string", "description": "Filter alerts by their creation dates (see rfc3339)."}], "tags": ["Reporting", "Statistics", "Alert"]}}, "/statistics/alerts/ttps": {"get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AlertThreatsCounterSchema"}}, "400": {"description": "Invalid Parameters"}}, "summary": "Get alert count by TTP", "description": "Get number of alerts per `attack-pattern`, `malware` and `tool`\n\nThis endpoint will search known TTPs in all alerts concerned\nby the date range to compute statistics about them.\n\nThe following permissions are required:\n - \u201cView alert statistics\u201d (`b1642ef8-4bc0-40b4-9ddf-7bd368659941`)", "operationId": "get_alert_tt_ps_counter_total_resource", "parameters": [{"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Communities to match (separated by commas)."}, {"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}, {"in": "query", "name": "date[created_at]", "required": false, "type": "string", "description": "Filter alerts by their creation dates (see rfc3339)."}], "tags": ["Reporting", "Statistics", "Alert"]}}, "/statistics/events": {"get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/EventStatsSchema"}}, "400": {"description": "Invalid Parameters"}}, "summary": "Get statistics on events", "description": "(deprecated)\n\nThis endpoint can be use to fetch statistics (counters and datasets) on all the events that were analyzed\nin a time frame. Time frame must be specified with `created_at` parameter.\n\nThe following permissions are required:\n - \u201cView event stats in asset listing\u201d (`74bc185a-eb82-4eac-a638-ebae41425fa0`)", "operationId": "get_event_stats_resource", "parameters": [{"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Communities to match (separated by commas)."}, {"in": "query", "name": "date[created_at]", "required": true, "type": "string", "description": "Filter on creation date (see rfc3339)"}], "tags": ["Statistics"]}}, "/statistics/events/counters": {"get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/EventCountersSchema"}}, "400": {"description": "Invalid Parameters"}}, "summary": "Get counters on events", "description": "(deprecated)\n\nThis endpoint can be use to fetch counters on all the events that were analyzed\nin a time frame. Time frame must be specified with `created_at` parameter.\n\nThe following permissions are required:\n - \u201cView event stats in asset listing\u201d (`74bc185a-eb82-4eac-a638-ebae41425fa0`)", "operationId": "get_event_counter_total_resource", "parameters": [{"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Communities to match (separated by commas)."}, {"in": "query", "name": "date[created_at]", "required": true, "type": "string", "description": "Filter on creation date (see rfc3339)"}], "tags": ["Statistics"]}}, "/statistics/events/entities": {"get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/EventStatsPerEntitiesSchema"}}, "400": {"description": "Invalid Parameters"}}, "summary": "Get statistics on events indexed by entities", "description": "(deprecated)\n\nThis paginates endpoint list all the produced statistics indexed by entities. A set of filters can be\nspecified to focus on certain statistics.\n\nOne can filter statistics given\n* the entity the statistics refers to (`match[entity_name]` and `match[entity_uuid]`)\n\nThe following permissions are required:\n - \u201cView event stats in asset listing\u201d (`74bc185a-eb82-4eac-a638-ebae41425fa0`)", "operationId": "get_event_entities_stats_resource", "parameters": [{"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Communities to match (separated by commas)."}, {"in": "query", "name": "date[created_at]", "required": true, "type": "string", "description": "Filter on creation date (see rfc3339)"}, {"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}, {"in": "query", "name": "match[entity_name]", "required": false, "type": "string", "description": "Match events by their entity names (separated by commas)."}, {"in": "query", "name": "match[entity_uuid]", "required": false, "type": "string", "description": "Match events by their entity uuids (separated by commas)."}], "tags": ["Statistics"]}}, "/statistics/events/entities/counters": {"get": {"responses": {"401": {"description": "Authentication failed"}, "403": {"description": "Insufficient permissions"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/EventCountersPerEntitiesSchema"}}, "400": {"description": "Invalid Parameters"}}, "summary": "Get counters on events indexed by entities", "description": "(deprecated)\n\nThis paginates endpoint list all the produced counters indexed by entities. A set of filters can be\nspecified to focus on certain statistics.\n\nOne can filter statistics given\n* the entity the statistics refers to (`match[entity_name]` and `match[entity_uuid]`)\n\nThe following permissions are required:\n - \u201cView event stats in asset listing\u201d (`74bc185a-eb82-4eac-a638-ebae41425fa0`)", "operationId": "get_event_entities_counter_total_resource", "parameters": [{"in": "query", "name": "match[community_uuid]", "required": false, "type": "string", "description": "Communities to match (separated by commas)."}, {"in": "query", "name": "date[created_at]", "required": true, "type": "string", "description": "Filter on creation date (see rfc3339)"}, {"in": "query", "name": "limit", "required": false, "type": "integer", "default": 20, "minimum": 1, "maximum": 100, "description": "limit a number of items (allowed range is 1-100), default is 20."}, {"in": "query", "name": "offset", "required": false, "type": "integer", "default": 0, "minimum": 0, "description": "a number of items to skip, default is 0."}, {"in": "query", "name": "match[entity_name]", "required": false, "type": "string", "description": "Match events by their entity names (separated by commas)."}, {"in": "query", "name": "match[entity_uuid]", "required": false, "type": "string", "description": "Match events by their entity uuids (separated by commas)."}], "tags": ["Statistics"]}}}, "info": {"title": "SIC Alert API", "version": "0", "description": "Manage alerts raised by SIC engines"}, "produces": ["application/json"], "consumes": ["application/json"], "securityDefinitions": {"accessToken": {"type": "apiKey", "in": "header", "name": "Authorization"}}, "security": [{"accessToken": []}], "tags": [{"name": "Alert Type", "description": "Query observed alert types."}, {"name": "Alert Status", "description": "Statuses of alerts"}, {"name": "Alert", "description": "Manage alerts produced by SIC engines"}, {"name": "Alert Sources and Targets", "description": "Query sources and targets of alerts"}, {"name": "Stats", "description": "Statistics on alerts"}, {"name": "Countermeasures", "description": "Manage countermeasures related to alerts raised by SIC"}, {"name": "Alert Rules", "description": "Query rules of alerts"}, {"name": "Alert Entities", "description": "Query entities found in alerts"}, {"name": "Case", "description": "Case Management"}, {"name": "Statistics", "description": "Counters, Datasets and Key Risk Indicators on SIC"}, {"name": "Cyber Kill Chain", "description": "Manage stages of the Cyber Kill Chain"}, {"name": "Comments", "description": "Manage all comments from the Operation Center"}], "definitions": {"AlertTypesSchema": {"type": "object", "properties": {"items": {"type": "array", "items": {"type": "object", "properties": {"value": {"type": "string"}, "category": {"type": "string"}}}}, "community_uuid": {"type": "string", "format": "uuid"}, "total": {"type": "integer"}}}, "AlertStatusesSchema": {"type": "object", "properties": {"items": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string"}, "name": {"type": "string"}, "description": {"type": "string"}}}}, "total": {"type": "integer"}}}, "AlertCreationTaskStatusSchema": {"type": "object", "properties": {"uuid": {"type": "string", "description": "Unique identifier of the task"}, "name": {"type": "string", "description": "Name of the task"}, "status": {"type": "string", "description": "Current status of the task (pending or completed)."}, "created_at": {"type": "string", "format": "date-time", "description": "Created date of the task"}, "created_by": {"type": "string", "description": "Identifier of the task creator"}, "created_by_type": {"type": "string", "description": "Profile type of the task creator"}, "total_count": {"type": "integer", "description": "Number of alerts to create"}, "success_count": {"type": "integer", "description": "Number of alert succesfully created"}, "failure_count": {"type": "integer", "description": "Number of alert that failed to be created"}, "pending_count": {"type": "integer", "description": "Number of pending alert"}, "failures": {"type": "array", "description": "UUIDs of all the alert that failed to be created", "items": {"type": "string"}}, "successes": {"type": "array", "description": "UUIDs of all the alert succesfully created", "items": {"type": "string"}}, "pendings": {"type": "array", "description": "UUIDs of all pending alerts", "items": {"type": "string"}}}, "required": ["created_at", "created_by", "created_by_type", "failure_count", "name", "pending_count", "status", "success_count", "total_count", "uuid"]}, "AlertsSchema": {"type": "object", "properties": {"items": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid"}, "title": {"type": "string"}, "created_at": {"type": "integer"}, "created_by": {"type": "string"}, "created_by_type": {"type": "string"}, "updated_at": {"type": "integer"}, "updated_by": {"type": "string"}, "updated_by_type": {"type": "string"}, "community_uuid": {"type": "string", "format": "uuid"}, "short_id": {"type": "string"}, "entity": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid"}, "name": {"type": "string"}}, "required": ["name", "uuid"]}, "urgency": {"description": "    The alert urgency can have two different representations in the api: a numerical and a textual representation.        | Urgency | Value |        | Low | [0-20[ |        | Moderate | [20-40[ |        | High | [40-60[ |        | Major | [60-80[ |        | Urgent | [80-100] |", "type": "object", "properties": {"current_value": {"type": "integer"}, "value": {"type": "integer"}, "severity": {"type": "integer"}, "criticity": {"type": "integer"}, "display": {"type": "string"}}}, "alert_type": {"type": "object", "properties": {"value": {"type": "string"}, "category": {"type": "string"}}}, "status": {"type": "object", "properties": {"uuid": {"type": "string"}, "name": {"type": "string"}, "description": {"type": "string"}}}, "rule": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid"}, "name": {"type": "string"}, "severity": {"type": "integer"}, "type": {"type": "string"}, "pattern": {"type": "string"}}, "required": ["name", "pattern", "uuid"]}, "detection_type": {"type": "string"}, "source": {"type": "string"}, "target": {"type": "string"}, "similar": {"type": "integer"}, "details": {"type": "string"}, "ttps": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "string"}, "type": {"type": "string"}, "name": {"type": "string"}, "description": {"type": "string"}}, "required": ["id", "name", "type"]}}, "adversaries": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "string"}, "type": {"type": "string"}, "name": {"type": "string"}, "description": {"type": "string"}}, "required": ["id", "name", "type"]}}, "stix": {"type": "object"}, "kill_chain_short_id": {"type": "string"}, "number_of_unseen_comments": {"type": "integer"}, "number_of_total_comments": {"type": "integer"}, "first_seen_at": {"type": "string", "format": "date-time"}, "last_seen_at": {"type": "string", "format": "date-time"}, "assets": {"type": "array", "items": {"type": "string", "format": "uuid"}}, "time_to_ingest": {"type": "integer"}, "time_to_detect": {"type": "integer"}, "time_to_acknowledge": {"type": "integer"}, "time_to_respond": {"type": "integer"}, "time_to_resolve": {"type": "integer"}, "intake_uuids": {"type": "array", "items": {"type": "string", "format": "uuid"}}, "cases": {"type": "array", "items": {"type": "object", "properties": {"short_id": {"type": "string"}, "name": {"type": "string"}, "is_supplied": {"type": "boolean"}, "manual": {"type": "boolean"}, "status": {"type": "string"}}}}}}}, "total": {"type": "integer"}, "has_more": {"type": "boolean"}}}, "AlertDetailSchema": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid"}, "title": {"type": "string"}, "created_at": {"type": "integer"}, "created_by": {"type": "string"}, "created_by_type": {"type": "string"}, "updated_at": {"type": "integer"}, "updated_by": {"type": "string"}, "updated_by_type": {"type": "string"}, "community_uuid": {"type": "string", "format": "uuid"}, "short_id": {"type": "string"}, "entity": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid"}, "name": {"type": "string"}}, "required": ["name", "uuid"]}, "urgency": {"description": "    The alert urgency can have two different representations in the api: a numerical and a textual representation.        | Urgency | Value |        | Low | [0-20[ |        | Moderate | [20-40[ |        | High | [40-60[ |        | Major | [60-80[ |        | Urgent | [80-100] |", "type": "object", "properties": {"current_value": {"type": "integer"}, "value": {"type": "integer"}, "severity": {"type": "integer"}, "criticity": {"type": "integer"}, "display": {"type": "string"}}}, "alert_type": {"type": "object", "properties": {"value": {"type": "string"}, "category": {"type": "string"}}}, "status": {"type": "object", "properties": {"uuid": {"type": "string"}, "name": {"type": "string"}, "description": {"type": "string"}}}, "rule": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid"}, "name": {"type": "string"}, "severity": {"type": "integer"}, "type": {"type": "string"}, "pattern": {"type": "string"}}, "required": ["name", "pattern", "uuid"]}, "detection_type": {"type": "string"}, "source": {"type": "string"}, "target": {"type": "string"}, "similar": {"type": "integer"}, "details": {"type": "string"}, "ttps": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "string"}, "type": {"type": "string"}, "name": {"type": "string"}, "description": {"type": "string"}}, "required": ["id", "name", "type"]}}, "adversaries": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "string"}, "type": {"type": "string"}, "name": {"type": "string"}, "description": {"type": "string"}}, "required": ["id", "name", "type"]}}, "stix": {"type": "object"}, "kill_chain_short_id": {"type": "string"}, "number_of_unseen_comments": {"type": "integer"}, "number_of_total_comments": {"type": "integer"}, "first_seen_at": {"type": "string", "format": "date-time"}, "last_seen_at": {"type": "string", "format": "date-time"}, "assets": {"type": "array", "items": {"type": "string", "format": "uuid"}}, "time_to_ingest": {"type": "integer"}, "time_to_detect": {"type": "integer"}, "time_to_acknowledge": {"type": "integer"}, "time_to_respond": {"type": "integer"}, "time_to_resolve": {"type": "integer"}, "intake_uuids": {"type": "array", "items": {"type": "string", "format": "uuid"}}, "cases": {"type": "array", "items": {"type": "object", "properties": {"short_id": {"type": "string"}, "name": {"type": "string"}, "is_supplied": {"type": "boolean"}, "manual": {"type": "boolean"}, "status": {"type": "string"}}}}, "comments": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid", "description": "Identifier of the comment"}, "content": {"type": "string", "description": "Content of the comment"}, "author": {"type": "string", "description": "Author of the comment"}, "date": {"type": "integer"}, "created_by": {"type": "string", "description": "The identifier of the creator of the comment"}, "created_by_type": {"type": "string", "description": "The type of the creator of the comment"}, "unseen": {"type": "boolean"}}, "required": ["author", "content", "created_by", "created_by_type", "date", "uuid"]}}, "history": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string"}, "created_at": {"type": "integer"}, "created_by": {"type": "string"}, "created_by_type": {"type": "string"}, "entry_type": {"type": "string"}, "alert": {"type": "object", "properties": {"status": {"type": "string"}, "previous_status": {"type": "string"}}}, "comment": {"type": "object", "properties": {"uuid": {"type": "string"}, "status": {"type": "string"}, "display_name": {"type": "string"}, "content": {"type": "string"}}}, "countermeasure": {"type": "object", "properties": {"uuid": {"type": "string"}, "status": {"type": "string"}}}, "history_comments": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid", "description": "Identifier of the comment"}, "content": {"type": "string", "description": "Content of the comment"}, "author": {"type": "string", "description": "Author of the comment"}, "date": {"type": "integer"}, "created_by": {"type": "string", "description": "The identifier of the creator of the comment"}, "created_by_type": {"type": "string", "description": "The type of the creator of the comment"}}, "required": ["author", "content", "created_by", "created_by_type", "date", "uuid"]}}, "countermeasure_action_step": {"type": "object", "properties": {"status": {"type": "string"}, "name": {"type": "string"}}}, "kill_chain": {"type": "object", "properties": {"uuid": {"type": "string"}, "short_id": {"type": "string"}, "name": {"type": "string"}, "previous_short_id": {"type": "string"}}}, "urgency": {"type": "object", "properties": {"value": {"type": "integer"}, "previous_value": {"type": "integer"}}}, "details": {"type": "object", "properties": {"value": {"type": "string"}, "previous_value": {"type": "string"}}}, "alert_type": {"type": "object", "properties": {"value": {"type": "string"}, "category": {"type": "string"}, "previous_value": {"type": "string"}, "previous_category": {"type": "string"}}}}}}, "countermeasures": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "description": "UUID of the countermeasure"}, "model_uuid": {"type": "string", "description": "UUID of the model from which this countermeasure has been created"}, "relevance": {"type": "integer", "description": "Relevance of the countermeasure"}, "dynamic_relevance": {"type": "integer", "description": "Dynamic relevance of the countermeasure"}, "duration": {"type": "string", "description": "Estimated duration to apply the countermeasures"}, "status": {"type": "string", "description": "(deprecated) Status of the countermeasure"}, "created_at": {"type": "string", "format": "date-time", "description": "Date the countermeasure was created"}, "created_by": {"type": "string", "description": "UUID of profile that created the countermeasure"}, "created_by_type": {"type": "string", "description": "Type of the profile that created the countermeasure"}, "activated_at": {"type": "string", "format": "date-time", "description": "Date the countermeasure was activated"}, "activated_by": {"type": "string", "description": "UUID of profile that activated the countermeasure"}, "activated_by_type": {"type": "string", "description": "Type of the profile that activated the countermeasure"}, "denied_at": {"type": "string", "format": "date-time", "description": "Date the countermeasure was denied"}, "denied_by": {"type": "string", "description": "UUID of profile that denied the countermeasure"}, "denied_by_type": {"type": "string", "description": "Type of the profile that denied the countermeasure"}, "course_of_action": {"type": "object", "description": "(deprecated) STIX2 object course of action"}, "action_steps": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "description": "Unique identifier (UUID) of the action step"}, "name": {"type": "string", "description": "Name of the action step"}, "description": {"type": "string", "description": "Description of the action step"}, "status": {"type": "string", "description": "Status of the action step"}, "created_at": {"type": "string", "format": "date-time", "description": "Date the action step was created"}, "created_by": {"type": "string", "description": "UUID of profile that created the action step"}, "created_by_type": {"type": "string", "description": "Type of the profile that created the action step"}, "activated_at": {"type": "string", "format": "date-time", "description": "Date the action step was activated"}, "activated_by": {"type": "string", "description": "UUID of profile that activated the action step"}, "activated_by_type": {"type": "string", "description": "Type of the profile that activated the action step"}, "denied_at": {"type": "string", "format": "date-time", "description": "Date the action step was denied"}, "denied_by": {"type": "string", "description": "UUID of profile that denied the action step"}, "denied_by_type": {"type": "string", "description": "Type of the profile that denied the action step"}, "action_order": {"type": "integer", "description": "Position in the execution order of action steps"}, "object": {"type": "object", "description": "Object associated to the action step"}, "comments": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid", "description": "Identifier of the comment"}, "content": {"type": "string", "description": "Content of the comment"}, "author": {"type": "string", "description": "Author of the comment"}, "date": {"type": "integer"}, "created_by": {"type": "string", "description": "The identifier of the creator of the comment"}, "created_by_type": {"type": "string", "description": "The type of the creator of the comment"}}, "required": ["author", "content", "created_by", "created_by_type", "date", "uuid"]}}, "assignee": {"type": "string", "description": "UUID of the profile assigned to the progress of the action step"}, "type": {"type": "string", "description": "Type of the action step (e.g. `text`, `openc2`)"}}}}, "name": {"type": "string", "description": "Name of the countermeasure"}, "description": {"type": "string", "description": "Description of the countermeasure"}, "comments": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid", "description": "Identifier of the comment"}, "content": {"type": "string", "description": "Content of the comment"}, "author": {"type": "string", "description": "Author of the comment"}, "date": {"type": "integer"}, "created_by": {"type": "string", "description": "The identifier of the creator of the comment"}, "created_by_type": {"type": "string", "description": "The type of the creator of the comment"}}, "required": ["author", "content", "created_by", "created_by_type", "date", "uuid"]}}, "assignee": {"type": "string", "description": "UUID of the profile assigned to the progress of the countermeasure"}, "type": {"type": "string", "description": "Type of the countermeasure (e.g. `text`, `intelligence_center`, `openc2`)"}, "external_ref": {"type": "string", "description": "Reference for countermeasures that comes from SEKOIA.IO\u2019s Intelligence Center"}, "alert_uuid": {"type": "string", "description": "UUID of the alert related to the countermeasure"}}}}, "similarity_strategy": {"description": "Strategy to use to consider alerts to be similar"}}}, "AlertHistorySchema": {"type": "object", "properties": {"items": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string"}, "created_at": {"type": "integer"}, "created_by": {"type": "string"}, "created_by_type": {"type": "string"}, "entry_type": {"type": "string"}, "alert": {"type": "object", "properties": {"status": {"type": "string"}, "previous_status": {"type": "string"}}}, "comment": {"type": "object", "properties": {"uuid": {"type": "string"}, "status": {"type": "string"}, "display_name": {"type": "string"}, "content": {"type": "string"}}}, "countermeasure": {"type": "object", "properties": {"uuid": {"type": "string"}, "status": {"type": "string"}}}, "history_comments": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid", "description": "Identifier of the comment"}, "content": {"type": "string", "description": "Content of the comment"}, "author": {"type": "string", "description": "Author of the comment"}, "date": {"type": "integer"}, "created_by": {"type": "string", "description": "The identifier of the creator of the comment"}, "created_by_type": {"type": "string", "description": "The type of the creator of the comment"}}, "required": ["author", "content", "created_by", "created_by_type", "date", "uuid"]}}, "countermeasure_action_step": {"type": "object", "properties": {"status": {"type": "string"}, "name": {"type": "string"}}}, "kill_chain": {"type": "object", "properties": {"uuid": {"type": "string"}, "short_id": {"type": "string"}, "name": {"type": "string"}, "previous_short_id": {"type": "string"}}}, "urgency": {"type": "object", "properties": {"value": {"type": "integer"}, "previous_value": {"type": "integer"}}}, "details": {"type": "object", "properties": {"value": {"type": "string"}, "previous_value": {"type": "string"}}}, "alert_type": {"type": "object", "properties": {"value": {"type": "string"}, "category": {"type": "string"}, "previous_value": {"type": "string"}, "previous_category": {"type": "string"}}}}}}, "total": {"type": "integer"}}}, "AlertHistoryEntrySchema": {"type": "object", "properties": {"uuid": {"type": "string"}, "created_at": {"type": "integer"}, "created_by": {"type": "string"}, "created_by_type": {"type": "string"}, "entry_type": {"type": "string"}, "alert": {"type": "object", "properties": {"status": {"type": "string"}, "previous_status": {"type": "string"}}}, "comment": {"type": "object", "properties": {"uuid": {"type": "string"}, "status": {"type": "string"}, "display_name": {"type": "string"}, "content": {"type": "string"}}}, "countermeasure": {"type": "object", "properties": {"uuid": {"type": "string"}, "status": {"type": "string"}}}, "history_comments": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid", "description": "Identifier of the comment"}, "content": {"type": "string", "description": "Content of the comment"}, "author": {"type": "string", "description": "Author of the comment"}, "date": {"type": "integer"}, "created_by": {"type": "string", "description": "The identifier of the creator of the comment"}, "created_by_type": {"type": "string", "description": "The type of the creator of the comment"}}, "required": ["author", "content", "created_by", "created_by_type", "date", "uuid"]}}, "countermeasure_action_step": {"type": "object", "properties": {"status": {"type": "string"}, "name": {"type": "string"}}}, "kill_chain": {"type": "object", "properties": {"uuid": {"type": "string"}, "short_id": {"type": "string"}, "name": {"type": "string"}, "previous_short_id": {"type": "string"}}}, "urgency": {"type": "object", "properties": {"value": {"type": "integer"}, "previous_value": {"type": "integer"}}}, "details": {"type": "object", "properties": {"value": {"type": "string"}, "previous_value": {"type": "string"}}}, "alert_type": {"type": "object", "properties": {"value": {"type": "string"}, "category": {"type": "string"}, "previous_value": {"type": "string"}, "previous_category": {"type": "string"}}}}}, "CommentsSchema": {"type": "object", "properties": {"items": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid", "description": "Identifier of the comment"}, "content": {"type": "string", "description": "Content of the comment"}, "author": {"type": "string", "description": "Author of the comment"}, "created_at": {"type": "string", "format": "date-time", "description": "The creation datetime of the comment"}, "updated_at": {"type": "string", "format": "date-time", "description": "The modification datetime of the comment"}, "created_by": {"type": "string", "description": "The identifier of the creator of the comment"}, "created_by_type": {"type": "string", "description": "The type of the creator of the comment"}, "type": {"type": "string", "description": "The type of the comment (alert_comment, countermeasure_comment, ...)"}, "community_uuid": {"type": "string", "format": "uuid", "description": "Identifier of the community"}, "alert_uuid": {"type": "string", "format": "uuid", "description": "The identifier of the alert associated to the comment"}, "alert_short_id": {"type": "string", "description": "The short id of the alert associated to the comment"}, "alert_title": {"type": "string", "description": "The title of the alert associated to the comment"}, "alert_status_uuid": {"type": "string", "format": "uuid", "description": "The identifier of the status of the alert associated to the comment"}, "alert_status_name": {"type": "string", "description": "The name of the status of the alert associated to the comment"}, "rule_uuid": {"type": "string", "format": "uuid", "description": "The identifier of the rule of the alert associated to the comment"}, "rule_name": {"type": "string", "description": "The name of the rule of the alert associated to the comment"}, "case_uuid": {"type": "string", "format": "uuid", "description": "The identifier of the case associated to the comment"}, "case_short_id": {"type": "string", "description": "The short id of the case associated to the comment"}, "case_title": {"type": "string", "description": "The title of the case associated to the comment"}, "case_status_uuid": {"type": "string", "format": "uuid", "description": "the identifier of the status of the case associated to the comment"}, "case_status_name": {"type": "string", "description": "The name of the status of the case associated to the comment"}}, "required": ["author", "community_uuid", "content", "created_at", "created_by", "created_by_type", "type", "updated_at", "uuid"]}}, "total": {"type": "integer"}}}, "AlertStatusWorkflowSchema": {"type": "object", "properties": {"actions": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "string"}, "name": {"type": "string"}, "description": {"type": "string"}}}}}}, "AlertCommentSchema": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid", "description": "Identifier of the comment"}, "content": {"type": "string", "description": "Content of the comment"}, "author": {"type": "string", "description": "Author of the comment"}, "date": {"type": "integer"}, "created_by": {"type": "string", "description": "The identifier of the creator of the comment"}, "created_by_type": {"type": "string", "description": "The type of the creator of the comment"}, "unseen": {"type": "boolean"}}, "required": ["author", "content", "created_by", "created_by_type", "date", "uuid"]}, "AlertCommentsSchema": {"type": "object", "properties": {"items": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid", "description": "Identifier of the comment"}, "content": {"type": "string", "description": "Content of the comment"}, "author": {"type": "string", "description": "Author of the comment"}, "date": {"type": "integer"}, "created_by": {"type": "string", "description": "The identifier of the creator of the comment"}, "created_by_type": {"type": "string", "description": "The type of the creator of the comment"}, "unseen": {"type": "boolean"}}, "required": ["author", "content", "created_by", "created_by_type", "date", "uuid"]}}, "total": {"type": "integer"}}}, "ObjectsSchema": {"type": "object", "properties": {"items": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "string", "description": "Identifier of the object"}, "type": {"type": "string", "description": "Type of the object"}, "display_name": {"type": "string", "description": "Display name of the object"}, "pattern": {"type": "string", "description": "Detection pattern (for indicators)"}, "description": {"type": "string", "description": "Display description of the object"}, "embedded_relationships": {"type": "object", "description": "Relationships embedded in the object", "additionalProperties": {"type": "array", "description": "Identifiers of the related objects", "items": {"type": "string"}}}}, "required": ["display_name", "id", "type"]}}, "total": {"type": "integer"}}}, "TimelineSchema": {"type": "object", "properties": {"timeline": {"type": "array", "description": "Evolution of the number of observed data", "items": {"type": "object", "properties": {"start": {"type": "string", "format": "date-time", "description": "Start of the point"}, "end": {"type": "string", "format": "date-time", "description": "End of the point"}, "value": {"type": "integer", "description": "Value of the point"}}, "required": ["end", "start", "value"]}}, "frame": {"description": "Recommanded frame to display", "type": "object", "properties": {"start": {"type": "string", "format": "date-time", "description": "Start of the frame"}, "end": {"type": "string", "format": "date-time", "description": "End of the frame"}}, "required": ["end", "start"]}}}, "AlertCountermeasureSchema": {"type": "object", "properties": {"uuid": {"type": "string", "description": "UUID of the countermeasure"}, "model_uuid": {"type": "string", "description": "UUID of the model from which this countermeasure has been created"}, "relevance": {"type": "integer", "description": "Relevance of the countermeasure"}, "dynamic_relevance": {"type": "integer", "description": "Dynamic relevance of the countermeasure"}, "duration": {"type": "string", "description": "Estimated duration to apply the countermeasures"}, "status": {"type": "string", "description": "(deprecated) Status of the countermeasure"}, "created_at": {"type": "string", "format": "date-time", "description": "Date the countermeasure was created"}, "created_by": {"type": "string", "description": "UUID of profile that created the countermeasure"}, "created_by_type": {"type": "string", "description": "Type of the profile that created the countermeasure"}, "activated_at": {"type": "string", "format": "date-time", "description": "Date the countermeasure was activated"}, "activated_by": {"type": "string", "description": "UUID of profile that activated the countermeasure"}, "activated_by_type": {"type": "string", "description": "Type of the profile that activated the countermeasure"}, "denied_at": {"type": "string", "format": "date-time", "description": "Date the countermeasure was denied"}, "denied_by": {"type": "string", "description": "UUID of profile that denied the countermeasure"}, "denied_by_type": {"type": "string", "description": "Type of the profile that denied the countermeasure"}, "course_of_action": {"type": "object", "description": "(deprecated) STIX2 object course of action"}, "action_steps": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "description": "Unique identifier (UUID) of the action step"}, "name": {"type": "string", "description": "Name of the action step"}, "description": {"type": "string", "description": "Description of the action step"}, "status": {"type": "string", "description": "Status of the action step"}, "created_at": {"type": "string", "format": "date-time", "description": "Date the action step was created"}, "created_by": {"type": "string", "description": "UUID of profile that created the action step"}, "created_by_type": {"type": "string", "description": "Type of the profile that created the action step"}, "activated_at": {"type": "string", "format": "date-time", "description": "Date the action step was activated"}, "activated_by": {"type": "string", "description": "UUID of profile that activated the action step"}, "activated_by_type": {"type": "string", "description": "Type of the profile that activated the action step"}, "denied_at": {"type": "string", "format": "date-time", "description": "Date the action step was denied"}, "denied_by": {"type": "string", "description": "UUID of profile that denied the action step"}, "denied_by_type": {"type": "string", "description": "Type of the profile that denied the action step"}, "action_order": {"type": "integer", "description": "Position in the execution order of action steps"}, "object": {"type": "object", "description": "Object associated to the action step"}, "comments": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid", "description": "Identifier of the comment"}, "content": {"type": "string", "description": "Content of the comment"}, "author": {"type": "string", "description": "Author of the comment"}, "date": {"type": "integer"}, "created_by": {"type": "string", "description": "The identifier of the creator of the comment"}, "created_by_type": {"type": "string", "description": "The type of the creator of the comment"}}, "required": ["author", "content", "created_by", "created_by_type", "date", "uuid"]}}, "assignee": {"type": "string", "description": "UUID of the profile assigned to the progress of the action step"}, "type": {"type": "string", "description": "Type of the action step (e.g. `text`, `openc2`)"}}}}, "name": {"type": "string", "description": "Name of the countermeasure"}, "description": {"type": "string", "description": "Description of the countermeasure"}, "comments": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid", "description": "Identifier of the comment"}, "content": {"type": "string", "description": "Content of the comment"}, "author": {"type": "string", "description": "Author of the comment"}, "date": {"type": "integer"}, "created_by": {"type": "string", "description": "The identifier of the creator of the comment"}, "created_by_type": {"type": "string", "description": "The type of the creator of the comment"}}, "required": ["author", "content", "created_by", "created_by_type", "date", "uuid"]}}, "assignee": {"type": "string", "description": "UUID of the profile assigned to the progress of the countermeasure"}, "type": {"type": "string", "description": "Type of the countermeasure (e.g. `text`, `intelligence_center`, `openc2`)"}, "external_ref": {"type": "string", "description": "Reference for countermeasures that comes from SEKOIA.IO\u2019s Intelligence Center"}, "alert_uuid": {"type": "string", "description": "UUID of the alert related to the countermeasure"}}}, "AlertCountermeasuresSchema": {"type": "object", "properties": {"items": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "description": "UUID of the countermeasure"}, "model_uuid": {"type": "string", "description": "UUID of the model from which this countermeasure has been created"}, "relevance": {"type": "integer", "description": "Relevance of the countermeasure"}, "dynamic_relevance": {"type": "integer", "description": "Dynamic relevance of the countermeasure"}, "duration": {"type": "string", "description": "Estimated duration to apply the countermeasures"}, "status": {"type": "string", "description": "(deprecated) Status of the countermeasure"}, "created_at": {"type": "string", "format": "date-time", "description": "Date the countermeasure was created"}, "created_by": {"type": "string", "description": "UUID of profile that created the countermeasure"}, "created_by_type": {"type": "string", "description": "Type of the profile that created the countermeasure"}, "activated_at": {"type": "string", "format": "date-time", "description": "Date the countermeasure was activated"}, "activated_by": {"type": "string", "description": "UUID of profile that activated the countermeasure"}, "activated_by_type": {"type": "string", "description": "Type of the profile that activated the countermeasure"}, "denied_at": {"type": "string", "format": "date-time", "description": "Date the countermeasure was denied"}, "denied_by": {"type": "string", "description": "UUID of profile that denied the countermeasure"}, "denied_by_type": {"type": "string", "description": "Type of the profile that denied the countermeasure"}, "course_of_action": {"type": "object", "description": "(deprecated) STIX2 object course of action"}, "action_steps": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "description": "Unique identifier (UUID) of the action step"}, "name": {"type": "string", "description": "Name of the action step"}, "description": {"type": "string", "description": "Description of the action step"}, "status": {"type": "string", "description": "Status of the action step"}, "created_at": {"type": "string", "format": "date-time", "description": "Date the action step was created"}, "created_by": {"type": "string", "description": "UUID of profile that created the action step"}, "created_by_type": {"type": "string", "description": "Type of the profile that created the action step"}, "activated_at": {"type": "string", "format": "date-time", "description": "Date the action step was activated"}, "activated_by": {"type": "string", "description": "UUID of profile that activated the action step"}, "activated_by_type": {"type": "string", "description": "Type of the profile that activated the action step"}, "denied_at": {"type": "string", "format": "date-time", "description": "Date the action step was denied"}, "denied_by": {"type": "string", "description": "UUID of profile that denied the action step"}, "denied_by_type": {"type": "string", "description": "Type of the profile that denied the action step"}, "action_order": {"type": "integer", "description": "Position in the execution order of action steps"}, "object": {"type": "object", "description": "Object associated to the action step"}, "comments": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid", "description": "Identifier of the comment"}, "content": {"type": "string", "description": "Content of the comment"}, "author": {"type": "string", "description": "Author of the comment"}, "date": {"type": "integer"}, "created_by": {"type": "string", "description": "The identifier of the creator of the comment"}, "created_by_type": {"type": "string", "description": "The type of the creator of the comment"}}, "required": ["author", "content", "created_by", "created_by_type", "date", "uuid"]}}, "assignee": {"type": "string", "description": "UUID of the profile assigned to the progress of the action step"}, "type": {"type": "string", "description": "Type of the action step (e.g. `text`, `openc2`)"}}}}, "name": {"type": "string", "description": "Name of the countermeasure"}, "description": {"type": "string", "description": "Description of the countermeasure"}, "comments": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid", "description": "Identifier of the comment"}, "content": {"type": "string", "description": "Content of the comment"}, "author": {"type": "string", "description": "Author of the comment"}, "date": {"type": "integer"}, "created_by": {"type": "string", "description": "The identifier of the creator of the comment"}, "created_by_type": {"type": "string", "description": "The type of the creator of the comment"}}, "required": ["author", "content", "created_by", "created_by_type", "date", "uuid"]}}, "assignee": {"type": "string", "description": "UUID of the profile assigned to the progress of the countermeasure"}, "type": {"type": "string", "description": "Type of the countermeasure (e.g. `text`, `intelligence_center`, `openc2`)"}, "external_ref": {"type": "string", "description": "Reference for countermeasures that comes from SEKOIA.IO\u2019s Intelligence Center"}, "alert_uuid": {"type": "string", "description": "UUID of the alert related to the countermeasure"}}}}, "total": {"type": "integer"}}}, "StatisticsSchema": {"type": "object", "properties": {"items": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "string", "description": "Id of the threat"}, "label": {"type": "string", "description": "Name of the threat"}, "buckets": {"type": "array", "items": {"type": "object", "properties": {"key": {"type": "string", "description": "Key of the bucket"}, "count": {"type": "integer", "description": "Number of alerts"}}}}, "total": {"type": "integer", "description": "Total number of alerts"}}}}}}, "TaskIdSchema": {"type": "object", "properties": {"task_id": {"type": "string", "format": "uuid"}}, "required": ["task_id"]}, "AlertSourcesSchema": {"type": "object", "properties": {"items": {"type": "array", "items": {"type": "string"}}, "total": {"type": "integer"}}}, "AlertTargetsSchema": {"type": "object", "properties": {"items": {"type": "array", "items": {"type": "string"}}, "total": {"type": "integer"}}}, "StatsRulesSchema": {"type": "object", "properties": {"total": {"type": "integer"}, "items": {"type": "array", "items": {"type": "object", "properties": {"rule_uuid": {"type": "string", "format": "uuid"}, "rule_name": {"type": "string"}, "total": {"type": "integer"}, "total_per_urgency": {"type": "object", "additionalProperties": {"type": "integer"}}, "graph": {"type": "object", "properties": {"x_scale": {"type": "object", "properties": {"labels": {"type": "array", "items": {"type": "string"}}}}, "datasets": {"type": "object", "properties": {"total": {"type": "array", "items": {"type": "integer"}}, "total_per_category": {"type": "array", "items": {"type": "object", "additionalProperties": {"type": "integer"}}}, "pending": {"type": "array", "items": {"type": "integer"}}, "ongoing": {"type": "array", "items": {"type": "integer"}}, "closed": {"type": "array", "items": {"type": "integer"}}, "rejected": {"type": "array", "items": {"type": "integer"}}, "acknowledged": {"type": "array", "items": {"type": "integer"}}, "ari": {"type": "array", "items": {"type": "object", "additionalProperties": {"type": "number"}}}, "ari_max": {"type": "array", "items": {"type": "number"}}, "urgency": {"type": "array", "items": {"type": "object", "additionalProperties": {"type": "number"}}}, "applied_countermeasure": {"type": "array", "items": {"type": "integer"}}}, "required": ["acknowledged", "applied_countermeasure", "ari_max", "closed", "ongoing", "pending", "rejected", "total"]}}, "required": ["datasets", "x_scale"]}}, "required": ["graph", "rule_name", "rule_uuid", "total"]}}}, "required": ["items", "total"]}, "CommentSchema": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid", "description": "Identifier of the comment"}, "content": {"type": "string", "description": "Content of the comment"}, "author": {"type": "string", "description": "Author of the comment"}, "date": {"type": "integer"}, "created_by": {"type": "string", "description": "The identifier of the creator of the comment"}, "created_by_type": {"type": "string", "description": "The type of the creator of the comment"}}, "required": ["author", "content", "created_by", "created_by_type", "date", "uuid"]}, "CountermeasureActionStepSchema": {"type": "object", "properties": {"uuid": {"type": "string", "description": "Unique identifier (UUID) of the action step"}, "name": {"type": "string", "description": "Name of the action step"}, "description": {"type": "string", "description": "Description of the action step"}, "status": {"type": "string", "description": "Status of the action step"}, "created_at": {"type": "string", "format": "date-time", "description": "Date the action step was created"}, "created_by": {"type": "string", "description": "UUID of profile that created the action step"}, "created_by_type": {"type": "string", "description": "Type of the profile that created the action step"}, "activated_at": {"type": "string", "format": "date-time", "description": "Date the action step was activated"}, "activated_by": {"type": "string", "description": "UUID of profile that activated the action step"}, "activated_by_type": {"type": "string", "description": "Type of the profile that activated the action step"}, "denied_at": {"type": "string", "format": "date-time", "description": "Date the action step was denied"}, "denied_by": {"type": "string", "description": "UUID of profile that denied the action step"}, "denied_by_type": {"type": "string", "description": "Type of the profile that denied the action step"}, "action_order": {"type": "integer", "description": "Position in the execution order of action steps"}, "object": {"type": "object", "description": "Object associated to the action step"}, "comments": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid", "description": "Identifier of the comment"}, "content": {"type": "string", "description": "Content of the comment"}, "author": {"type": "string", "description": "Author of the comment"}, "date": {"type": "integer"}, "created_by": {"type": "string", "description": "The identifier of the creator of the comment"}, "created_by_type": {"type": "string", "description": "The type of the creator of the comment"}}, "required": ["author", "content", "created_by", "created_by_type", "date", "uuid"]}}, "assignee": {"type": "string", "description": "UUID of the profile assigned to the progress of the action step"}, "type": {"type": "string", "description": "Type of the action step (e.g. `text`, `openc2`)"}}}, "AlertRulesSchema": {"type": "object", "properties": {"items": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "description": "Unique identifier of the rule"}, "name": {"type": "string", "description": "Name of the rule"}, "community_uuid": {"type": "string", "description": "Community uuid of the rule"}}}}, "total": {"type": "integer"}}}, "AlertEntitiesSchema": {"type": "object", "properties": {"items": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string", "description": "Name of the entity"}, "uuid": {"type": "string", "description": "Unique identifier of the entity"}, "community_uuid": {"type": "string", "description": "UUID of the community"}}}}, "total": {"type": "integer"}}}, "CaseSchema": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid"}, "short_id": {"type": "string"}, "created_at": {"type": "string"}, "created_by": {"type": "string"}, "created_by_type": {"type": "string"}, "updated_at": {"type": "string"}, "updated_by": {"type": "string"}, "updated_by_type": {"type": "string"}, "title": {"type": "string"}, "description": {"type": "string"}, "priority": {"default": "medium", "description": "priority of the case", "enum": ["low", "medium", "high"]}, "status": {"type": "string"}, "status_uuid": {"type": "string", "format": "uuid"}, "community_uuid": {"type": "string", "format": "uuid"}, "subscribers": {"type": "array", "items": {"type": "object", "properties": {"avatar_uuid": {"type": "string", "format": "uuid"}, "type": {"type": "string"}}, "required": ["avatar_uuid", "type"]}}, "tags": {"type": "array", "description": "List of tags associated to the case", "items": {"type": "string"}}, "number_of_comments": {"type": "integer"}, "first_seen_at": {"type": "string", "format": "date-time", "x-nullable": true, "description": "Date and time of the first case event"}, "last_seen_at": {"type": "string", "format": "date-time", "x-nullable": true, "description": "Date and time of the last case event"}, "manual": {"type": "boolean", "x-nullable": true, "description": "if True, indicates that the case was created manually"}, "is_supplied": {"type": "boolean", "x-nullable": true, "description": "if True, indicates that alerts can be automatically added to the case"}, "verdict_uuid": {"type": "string", "format": "uuid", "x-nullable": true, "description": "UUID of the verdict associated to the case"}, "verdict": {"x-nullable": true, "type": "object", "properties": {"description": {"type": "string"}, "label": {"type": "string"}, "level": {"type": "integer"}, "stage": {"type": "string"}}, "required": ["description", "label", "level", "stage"]}, "custom_status_uuid": {"type": "string", "format": "uuid", "x-nullable": true, "description": "UUID of the custom status associated to the case"}, "custom_status": {"x-nullable": true, "type": "object", "properties": {"description": {"type": "string"}, "label": {"type": "string"}, "level": {"type": "integer"}, "stage": {"type": "string"}}, "required": ["description", "label", "level", "stage"]}, "custom_priority_uuid": {"type": "string", "format": "uuid", "x-nullable": true, "description": "UUID of the priority associated to the case"}, "custom_priority": {"x-nullable": true, "type": "object", "properties": {"description": {"type": "string"}, "label": {"type": "string"}, "level": {"type": "integer"}, "color": {"type": "string"}}, "required": ["color", "description", "label", "level"]}, "number_of_alerts": {"type": "integer"}, "alerts": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid"}, "title": {"type": "string"}, "created_at": {"type": "integer"}, "created_by": {"type": "string"}, "created_by_type": {"type": "string"}, "updated_at": {"type": "integer"}, "updated_by": {"type": "string"}, "updated_by_type": {"type": "string"}, "community_uuid": {"type": "string", "format": "uuid"}, "short_id": {"type": "string"}, "entity": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid"}, "name": {"type": "string"}}, "required": ["name", "uuid"]}, "urgency": {"description": "    The alert urgency can have two different representations in the api: a numerical and a textual representation.        | Urgency | Value |        | Low | [0-20[ |        | Moderate | [20-40[ |        | High | [40-60[ |        | Major | [60-80[ |        | Urgent | [80-100] |", "type": "object", "properties": {"current_value": {"type": "integer"}, "value": {"type": "integer"}, "severity": {"type": "integer"}, "criticity": {"type": "integer"}, "display": {"type": "string"}}}, "alert_type": {"type": "object", "properties": {"value": {"type": "string"}, "category": {"type": "string"}}}, "status": {"type": "object", "properties": {"uuid": {"type": "string"}, "name": {"type": "string"}, "description": {"type": "string"}}}, "rule": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid"}, "name": {"type": "string"}, "severity": {"type": "integer"}, "type": {"type": "string"}, "pattern": {"type": "string"}}, "required": ["name", "pattern", "uuid"]}, "detection_type": {"type": "string"}, "source": {"type": "string"}, "target": {"type": "string"}, "similar": {"type": "integer"}, "details": {"type": "string"}, "ttps": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "string"}, "type": {"type": "string"}, "name": {"type": "string"}, "description": {"type": "string"}}, "required": ["id", "name", "type"]}}, "adversaries": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "string"}, "type": {"type": "string"}, "name": {"type": "string"}, "description": {"type": "string"}}, "required": ["id", "name", "type"]}}, "stix": {"type": "object"}, "kill_chain_short_id": {"type": "string"}, "number_of_unseen_comments": {"type": "integer"}, "number_of_total_comments": {"type": "integer"}, "first_seen_at": {"type": "string", "format": "date-time"}, "last_seen_at": {"type": "string", "format": "date-time"}, "assets": {"type": "array", "items": {"type": "string", "format": "uuid"}}, "time_to_ingest": {"type": "integer"}, "time_to_detect": {"type": "integer"}, "time_to_acknowledge": {"type": "integer"}, "time_to_respond": {"type": "integer"}, "time_to_resolve": {"type": "integer"}, "intake_uuids": {"type": "array", "items": {"type": "string", "format": "uuid"}}, "cases": {"type": "array", "items": {"type": "object", "properties": {"short_id": {"type": "string"}, "name": {"type": "string"}, "is_supplied": {"type": "boolean"}, "manual": {"type": "boolean"}, "status": {"type": "string"}}}}}}}}, "required": ["community_uuid", "created_at", "created_by", "created_by_type", "short_id", "status", "status_uuid", "title", "uuid"]}, "CasesSchema": {"type": "object", "properties": {"items": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid"}, "short_id": {"type": "string"}, "created_at": {"type": "string"}, "created_by": {"type": "string"}, "created_by_type": {"type": "string"}, "updated_at": {"type": "string"}, "updated_by": {"type": "string"}, "updated_by_type": {"type": "string"}, "title": {"type": "string"}, "description": {"type": "string"}, "priority": {"default": "medium", "description": "priority of the case", "enum": ["low", "medium", "high"]}, "status": {"type": "string"}, "status_uuid": {"type": "string", "format": "uuid"}, "community_uuid": {"type": "string", "format": "uuid"}, "subscribers": {"type": "array", "items": {"type": "object", "properties": {"avatar_uuid": {"type": "string", "format": "uuid"}, "type": {"type": "string"}}, "required": ["avatar_uuid", "type"]}}, "tags": {"type": "array", "description": "List of tags associated to the case", "items": {"type": "string"}}, "number_of_comments": {"type": "integer"}, "first_seen_at": {"type": "string", "format": "date-time", "x-nullable": true, "description": "Date and time of the first case event"}, "last_seen_at": {"type": "string", "format": "date-time", "x-nullable": true, "description": "Date and time of the last case event"}, "manual": {"type": "boolean", "x-nullable": true, "description": "if True, indicates that the case was created manually"}, "is_supplied": {"type": "boolean", "x-nullable": true, "description": "if True, indicates that alerts can be automatically added to the case"}, "verdict_uuid": {"type": "string", "format": "uuid", "x-nullable": true, "description": "UUID of the verdict associated to the case"}, "verdict": {"x-nullable": true, "type": "object", "properties": {"description": {"type": "string"}, "label": {"type": "string"}, "level": {"type": "integer"}, "stage": {"type": "string"}}, "required": ["description", "label", "level", "stage"]}, "custom_status_uuid": {"type": "string", "format": "uuid", "x-nullable": true, "description": "UUID of the custom status associated to the case"}, "custom_status": {"x-nullable": true, "type": "object", "properties": {"description": {"type": "string"}, "label": {"type": "string"}, "level": {"type": "integer"}, "stage": {"type": "string"}}, "required": ["description", "label", "level", "stage"]}, "custom_priority_uuid": {"type": "string", "format": "uuid", "x-nullable": true, "description": "UUID of the priority associated to the case"}, "custom_priority": {"x-nullable": true, "type": "object", "properties": {"description": {"type": "string"}, "label": {"type": "string"}, "level": {"type": "integer"}, "color": {"type": "string"}}, "required": ["color", "description", "label", "level"]}}, "required": ["community_uuid", "created_at", "created_by", "created_by_type", "short_id", "status", "status_uuid", "title", "uuid"]}}, "total": {"type": "integer"}}}, "CaseTagsSchema": {"type": "object", "properties": {"items": {"type": "array", "items": {"type": "string"}}, "total": {"type": "integer"}}}, "CasesStatisticsSchema": {"type": "object", "properties": {"count": {"type": "object", "properties": {"total": {"type": "integer"}, "open": {"type": "integer"}, "closed": {"type": "integer"}}}}}, "CaseCommentSchema": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid"}, "content": {"type": "string"}, "created_at": {"type": "string"}, "created_by": {"type": "string"}, "created_by_type": {"type": "string"}, "updated_at": {"type": "string"}}, "required": ["content", "created_at", "created_by", "created_by_type", "uuid"]}, "CaseCommentsSchema": {"type": "object", "properties": {"items": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid"}, "content": {"type": "string"}, "created_at": {"type": "string"}, "created_by": {"type": "string"}, "created_by_type": {"type": "string"}, "updated_at": {"type": "string"}}, "required": ["content", "created_at", "created_by", "created_by_type", "uuid"]}}, "total": {"type": "integer"}}}, "AddedAlertsSchema": {"type": "object", "properties": {"status": {"type": "string"}}}, "AlertsCaseSchema": {"type": "object", "properties": {"items": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid"}, "title": {"type": "string"}, "created_at": {"type": "integer"}, "created_by": {"type": "string"}, "created_by_type": {"type": "string"}, "updated_at": {"type": "integer"}, "updated_by": {"type": "string"}, "updated_by_type": {"type": "string"}, "community_uuid": {"type": "string", "format": "uuid"}, "short_id": {"type": "string"}, "entity": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid"}, "name": {"type": "string"}}, "required": ["name", "uuid"]}, "urgency": {"description": "    The alert urgency can have two different representations in the api: a numerical and a textual representation.        | Urgency | Value |        | Low | [0-20[ |        | Moderate | [20-40[ |        | High | [40-60[ |        | Major | [60-80[ |        | Urgent | [80-100] |", "type": "object", "properties": {"current_value": {"type": "integer"}, "value": {"type": "integer"}, "severity": {"type": "integer"}, "criticity": {"type": "integer"}, "display": {"type": "string"}}}, "alert_type": {"type": "object", "properties": {"value": {"type": "string"}, "category": {"type": "string"}}}, "status": {"type": "object", "properties": {"uuid": {"type": "string"}, "name": {"type": "string"}, "description": {"type": "string"}}}, "rule": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid"}, "name": {"type": "string"}, "severity": {"type": "integer"}, "type": {"type": "string"}, "pattern": {"type": "string"}}, "required": ["name", "pattern", "uuid"]}, "detection_type": {"type": "string"}, "source": {"type": "string"}, "target": {"type": "string"}, "similar": {"type": "integer"}, "details": {"type": "string"}, "ttps": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "string"}, "type": {"type": "string"}, "name": {"type": "string"}, "description": {"type": "string"}}, "required": ["id", "name", "type"]}}, "adversaries": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "string"}, "type": {"type": "string"}, "name": {"type": "string"}, "description": {"type": "string"}}, "required": ["id", "name", "type"]}}, "stix": {"type": "object"}, "kill_chain_short_id": {"type": "string"}, "number_of_unseen_comments": {"type": "integer"}, "number_of_total_comments": {"type": "integer"}, "first_seen_at": {"type": "string", "format": "date-time"}, "last_seen_at": {"type": "string", "format": "date-time"}, "assets": {"type": "array", "items": {"type": "string", "format": "uuid"}}, "time_to_ingest": {"type": "integer"}, "time_to_detect": {"type": "integer"}, "time_to_acknowledge": {"type": "integer"}, "time_to_respond": {"type": "integer"}, "time_to_resolve": {"type": "integer"}, "intake_uuids": {"type": "array", "items": {"type": "string", "format": "uuid"}}, "cases": {"type": "array", "items": {"type": "object", "properties": {"short_id": {"type": "string"}, "name": {"type": "string"}, "is_supplied": {"type": "boolean"}, "manual": {"type": "boolean"}, "status": {"type": "string"}}}}, "description": {"type": "string", "description": "Description of the alert with special field that can be enriched"}, "similarity_strategy": {"description": "Strategy used to compute the similarity between alerts"}}}}, "total": {"type": "integer"}, "has_more": {"type": "boolean"}}}, "CaseCountermeasureSchema": {"type": "object", "properties": {"uuid": {"type": "string", "description": "UUID of the countermeasure"}, "model_uuid": {"type": "string", "description": "UUID of the model from which this countermeasure has been created"}, "relevance": {"type": "integer", "description": "Relevance of the countermeasure"}, "dynamic_relevance": {"type": "integer", "description": "Dynamic relevance of the countermeasure"}, "duration": {"type": "string", "description": "Estimated duration to apply the countermeasures"}, "status": {"type": "string", "description": "(deprecated) Status of the countermeasure"}, "created_at": {"type": "string", "format": "date-time", "description": "Date the countermeasure was created"}, "created_by": {"type": "string", "description": "UUID of profile that created the countermeasure"}, "created_by_type": {"type": "string", "description": "Type of the profile that created the countermeasure"}, "activated_at": {"type": "string", "format": "date-time", "description": "Date the countermeasure was activated"}, "activated_by": {"type": "string", "description": "UUID of profile that activated the countermeasure"}, "activated_by_type": {"type": "string", "description": "Type of the profile that activated the countermeasure"}, "denied_at": {"type": "string", "format": "date-time", "description": "Date the countermeasure was denied"}, "denied_by": {"type": "string", "description": "UUID of profile that denied the countermeasure"}, "denied_by_type": {"type": "string", "description": "Type of the profile that denied the countermeasure"}, "course_of_action": {"type": "object", "description": "(deprecated) STIX2 object course of action"}, "action_steps": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "description": "Unique identifier (UUID) of the action step"}, "name": {"type": "string", "description": "Name of the action step"}, "description": {"type": "string", "description": "Description of the action step"}, "status": {"type": "string", "description": "Status of the action step"}, "created_at": {"type": "string", "format": "date-time", "description": "Date the action step was created"}, "created_by": {"type": "string", "description": "UUID of profile that created the action step"}, "created_by_type": {"type": "string", "description": "Type of the profile that created the action step"}, "activated_at": {"type": "string", "format": "date-time", "description": "Date the action step was activated"}, "activated_by": {"type": "string", "description": "UUID of profile that activated the action step"}, "activated_by_type": {"type": "string", "description": "Type of the profile that activated the action step"}, "denied_at": {"type": "string", "format": "date-time", "description": "Date the action step was denied"}, "denied_by": {"type": "string", "description": "UUID of profile that denied the action step"}, "denied_by_type": {"type": "string", "description": "Type of the profile that denied the action step"}, "action_order": {"type": "integer", "description": "Position in the execution order of action steps"}, "object": {"type": "object", "description": "Object associated to the action step"}, "comments": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid", "description": "Identifier of the comment"}, "content": {"type": "string", "description": "Content of the comment"}, "author": {"type": "string", "description": "Author of the comment"}, "date": {"type": "integer"}, "created_by": {"type": "string", "description": "The identifier of the creator of the comment"}, "created_by_type": {"type": "string", "description": "The type of the creator of the comment"}}, "required": ["author", "content", "created_by", "created_by_type", "date", "uuid"]}}, "assignee": {"type": "string", "description": "UUID of the profile assigned to the progress of the action step"}, "type": {"type": "string", "description": "Type of the action step (e.g. `text`, `openc2`)"}}}}, "name": {"type": "string", "description": "Name of the countermeasure"}, "description": {"type": "string", "description": "Description of the countermeasure"}, "comments": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid", "description": "Identifier of the comment"}, "content": {"type": "string", "description": "Content of the comment"}, "author": {"type": "string", "description": "Author of the comment"}, "date": {"type": "integer"}, "created_by": {"type": "string", "description": "The identifier of the creator of the comment"}, "created_by_type": {"type": "string", "description": "The type of the creator of the comment"}}, "required": ["author", "content", "created_by", "created_by_type", "date", "uuid"]}}, "assignee": {"type": "string", "description": "UUID of the profile assigned to the progress of the countermeasure"}, "type": {"type": "string", "description": "Type of the countermeasure (e.g. `text`, `intelligence_center`, `openc2`)"}, "external_ref": {"type": "string", "description": "Reference for countermeasures that comes from SEKOIA.IO\u2019s Intelligence Center"}, "case_uuid": {"type": "string", "description": "UUID of the case related to the countermeasure"}}}, "CaseCountermeasuresSchema": {"type": "object", "properties": {"items": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "description": "UUID of the countermeasure"}, "model_uuid": {"type": "string", "description": "UUID of the model from which this countermeasure has been created"}, "relevance": {"type": "integer", "description": "Relevance of the countermeasure"}, "dynamic_relevance": {"type": "integer", "description": "Dynamic relevance of the countermeasure"}, "duration": {"type": "string", "description": "Estimated duration to apply the countermeasures"}, "status": {"type": "string", "description": "(deprecated) Status of the countermeasure"}, "created_at": {"type": "string", "format": "date-time", "description": "Date the countermeasure was created"}, "created_by": {"type": "string", "description": "UUID of profile that created the countermeasure"}, "created_by_type": {"type": "string", "description": "Type of the profile that created the countermeasure"}, "activated_at": {"type": "string", "format": "date-time", "description": "Date the countermeasure was activated"}, "activated_by": {"type": "string", "description": "UUID of profile that activated the countermeasure"}, "activated_by_type": {"type": "string", "description": "Type of the profile that activated the countermeasure"}, "denied_at": {"type": "string", "format": "date-time", "description": "Date the countermeasure was denied"}, "denied_by": {"type": "string", "description": "UUID of profile that denied the countermeasure"}, "denied_by_type": {"type": "string", "description": "Type of the profile that denied the countermeasure"}, "course_of_action": {"type": "object", "description": "(deprecated) STIX2 object course of action"}, "action_steps": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "description": "Unique identifier (UUID) of the action step"}, "name": {"type": "string", "description": "Name of the action step"}, "description": {"type": "string", "description": "Description of the action step"}, "status": {"type": "string", "description": "Status of the action step"}, "created_at": {"type": "string", "format": "date-time", "description": "Date the action step was created"}, "created_by": {"type": "string", "description": "UUID of profile that created the action step"}, "created_by_type": {"type": "string", "description": "Type of the profile that created the action step"}, "activated_at": {"type": "string", "format": "date-time", "description": "Date the action step was activated"}, "activated_by": {"type": "string", "description": "UUID of profile that activated the action step"}, "activated_by_type": {"type": "string", "description": "Type of the profile that activated the action step"}, "denied_at": {"type": "string", "format": "date-time", "description": "Date the action step was denied"}, "denied_by": {"type": "string", "description": "UUID of profile that denied the action step"}, "denied_by_type": {"type": "string", "description": "Type of the profile that denied the action step"}, "action_order": {"type": "integer", "description": "Position in the execution order of action steps"}, "object": {"type": "object", "description": "Object associated to the action step"}, "comments": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid", "description": "Identifier of the comment"}, "content": {"type": "string", "description": "Content of the comment"}, "author": {"type": "string", "description": "Author of the comment"}, "date": {"type": "integer"}, "created_by": {"type": "string", "description": "The identifier of the creator of the comment"}, "created_by_type": {"type": "string", "description": "The type of the creator of the comment"}}, "required": ["author", "content", "created_by", "created_by_type", "date", "uuid"]}}, "assignee": {"type": "string", "description": "UUID of the profile assigned to the progress of the action step"}, "type": {"type": "string", "description": "Type of the action step (e.g. `text`, `openc2`)"}}}}, "name": {"type": "string", "description": "Name of the countermeasure"}, "description": {"type": "string", "description": "Description of the countermeasure"}, "comments": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid", "description": "Identifier of the comment"}, "content": {"type": "string", "description": "Content of the comment"}, "author": {"type": "string", "description": "Author of the comment"}, "date": {"type": "integer"}, "created_by": {"type": "string", "description": "The identifier of the creator of the comment"}, "created_by_type": {"type": "string", "description": "The type of the creator of the comment"}}, "required": ["author", "content", "created_by", "created_by_type", "date", "uuid"]}}, "assignee": {"type": "string", "description": "UUID of the profile assigned to the progress of the countermeasure"}, "type": {"type": "string", "description": "Type of the countermeasure (e.g. `text`, `intelligence_center`, `openc2`)"}, "external_ref": {"type": "string", "description": "Reference for countermeasures that comes from SEKOIA.IO\u2019s Intelligence Center"}, "case_uuid": {"type": "string", "description": "UUID of the case related to the countermeasure"}}}}, "total": {"type": "integer"}}}, "CaseThreatsSchema": {"type": "object", "properties": {"threats": {"type": "array", "description": "Dict of threats associated to the case's alerts", "items": {"type": "object", "properties": {"id": {"type": "string", "description": "Unique identifier of the threat"}, "type": {"type": "string", "description": "Type of threat"}, "name": {"type": "string", "description": "Name of the threat"}, "description": {"type": "string", "description": "Description of the threat"}}}}}}, "CaseAssetsSchema": {"type": "object", "properties": {"assets": {"type": "array", "description": "List of assets uuids associated to the case's alerts", "items": {"type": "string"}}}}, "CaseEntitiesSchema": {"type": "object", "properties": {"entities": {"type": "array", "description": "List of entities uuids associated to the case's alerts", "items": {"type": "string"}}}}, "CaseKillChainSchema": {"type": "object", "properties": {"killchains": {"type": "array", "description": "List of kill chain short ids associated to the case's alerts", "items": {"type": "string"}}}}, "CaseRulesSchema": {"type": "object", "properties": {"rules": {"type": "array", "description": "List of rules associated to the case's alerts", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid"}, "name": {"type": "string", "description": "Name of the rule"}}, "required": ["uuid"]}}}}, "CaseHistoryListSchema": {"type": "object", "properties": {"items": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid"}, "created_at": {"type": "string"}, "created_by": {"type": "string"}, "created_by_type": {"type": "string"}, "action": {"type": "object"}, "type": {"type": "string"}}, "required": ["created_at", "created_by", "created_by_type", "type", "uuid"]}}, "total": {"type": "integer"}}}, "AlertStatsSchema": {"type": "object", "properties": {"counters": {"description": "Statistics for the whole time frame.", "type": "object", "properties": {"total": {"type": "integer", "description": "Number of alerts received during the requested time frame."}, "total_per_category": {"type": "object", "description": "Number of alerts received during the requested time frame grouped by category.", "additionalProperties": {"type": "integer"}}, "urgency_per_category": {"type": "object", "description": "Sum of urgencies of alerts, validated, closed, or rejected, received during the requested time frame grouped by category.", "additionalProperties": {"type": "number"}}, "total_per_status": {"type": "object", "description": "Number of alerts received during the requested time frame grouped by status.", "additionalProperties": {"type": "integer"}}, "total_per_urgency": {"type": "object", "description": "Number of alerts received during the requested time frame grouped by urgency bracket.", "additionalProperties": {"type": "integer"}}}, "required": ["total", "total_per_category", "total_per_status", "urgency_per_category"]}, "kris": {"description": "Key Risk Indicators.", "type": "object", "properties": {"ari": {"type": "object", "description": "Alert Risk Indicator (ARI) of each category for the last day of the requested time frame.", "additionalProperties": {"type": "number"}}, "ari_max": {"type": "number", "description": "Alert Risk Indicator (ARI) for the last day of the requested time frame."}}, "required": ["ari", "ari_max"]}, "datasets": {"description": "Statistics by UTC day.", "type": "object", "properties": {"labels": {"type": "array", "description": "UTC date+time in ISO 8601 notation of each day of the requested time frame.Other fields are grouped according to these labels.", "items": {"type": "string"}}, "total": {"type": "array", "description": "Number of alerts received during the requested time frame grouped by UTC day.", "items": {"type": "integer"}}, "total_per_category": {"type": "array", "description": "Number of alerts per category grouped by UTC day.", "items": {"type": "object", "additionalProperties": {"type": "number"}}}, "urgency_per_category": {"type": "array", "description": "Sum of urgencies of alerts, validated, closed, or rejected, per category and grouped by UTC day.", "items": {"type": "object", "additionalProperties": {"type": "number"}}}, "ari": {"type": "array", "description": "Alert Risk Indicator (ARI) of each category for each UTC day of the requested time frame.", "items": {"type": "object", "additionalProperties": {"type": "number"}}}, "ari_max": {"type": "array", "description": "Alert Risk Indicator (ARI) for each UTC day of the requested time frame.", "items": {"type": "number"}}, "total_per_status": {"type": "array", "description": "Number of alerts per status grouped by UTC day.", "items": {"type": "object", "additionalProperties": {"type": "number"}}}, "total_per_urgency": {"type": "array", "description": "Number of alerts per urgency bracket grouped by UTC day.", "items": {"type": "object", "additionalProperties": {"type": "number"}}}}, "required": ["ari", "ari_max", "labels", "total", "total_per_category", "total_per_status", "urgency_per_category"]}}, "required": ["counters", "datasets", "kris"]}, "AlertCountersSchema": {"type": "object", "properties": {"total": {"type": "integer", "description": "Number of alerts received during the requested time frame."}, "total_per_category": {"type": "object", "description": "Number of alerts received during the requested time frame grouped by category.", "additionalProperties": {"type": "integer"}}, "urgency_per_category": {"type": "object", "description": "Sum of urgencies of alerts, validated, closed, or rejected, received during the requested time frame grouped by category.", "additionalProperties": {"type": "number"}}, "total_per_status": {"type": "object", "description": "Number of alerts received during the requested time frame grouped by status.", "additionalProperties": {"type": "integer"}}, "total_per_urgency": {"type": "object", "description": "Number of alerts received during the requested time frame grouped by urgency bracket.", "additionalProperties": {"type": "integer"}}}, "required": ["total", "total_per_category", "total_per_status", "urgency_per_category"]}, "AlertKRIsSchema": {"type": "object", "properties": {"ari": {"type": "object", "description": "Alert Risk Indicator (ARI) of each category for the last day of the requested time frame.", "additionalProperties": {"type": "number"}}, "ari_max": {"type": "number", "description": "Alert Risk Indicator (ARI) for the last day of the requested time frame."}}, "required": ["ari", "ari_max"]}, "AlertStatsPerEntitiesSchema": {"type": "object", "properties": {"total": {"type": "integer", "description": "Number of entities conforming to the `entity_name`, `entity_uuid` and `created_at` parameters."}, "items": {"type": "array", "description": "Slice of the full list of statistics per entities as defined by the `sort`, `direction`, `offset`, and `limit` parameters.", "items": {"type": "object", "properties": {"counters": {"description": "Statistics for the whole time frame.", "type": "object", "properties": {"total": {"type": "integer", "description": "Number of alerts received during the requested time frame."}, "total_per_category": {"type": "object", "description": "Number of alerts received during the requested time frame grouped by category.", "additionalProperties": {"type": "integer"}}, "urgency_per_category": {"type": "object", "description": "Sum of urgencies of alerts, validated, closed, or rejected, received during the requested time frame grouped by category.", "additionalProperties": {"type": "number"}}, "total_per_status": {"type": "object", "description": "Number of alerts received during the requested time frame grouped by status.", "additionalProperties": {"type": "integer"}}, "total_per_urgency": {"type": "object", "description": "Number of alerts received during the requested time frame grouped by urgency bracket.", "additionalProperties": {"type": "integer"}}}, "required": ["total", "total_per_category", "total_per_status", "urgency_per_category"]}, "kris": {"description": "Key Risk Indicators.", "type": "object", "properties": {"ari": {"type": "object", "description": "Alert Risk Indicator (ARI) of each category for the last day of the requested time frame.", "additionalProperties": {"type": "number"}}, "ari_max": {"type": "number", "description": "Alert Risk Indicator (ARI) for the last day of the requested time frame."}}, "required": ["ari", "ari_max"]}, "datasets": {"description": "Statistics by UTC day.", "type": "object", "properties": {"labels": {"type": "array", "description": "UTC date+time in ISO 8601 notation of each day of the requested time frame.Other fields are grouped according to these labels.", "items": {"type": "string"}}, "total": {"type": "array", "description": "Number of alerts received during the requested time frame grouped by UTC day.", "items": {"type": "integer"}}, "total_per_category": {"type": "array", "description": "Number of alerts per category grouped by UTC day.", "items": {"type": "object", "additionalProperties": {"type": "number"}}}, "urgency_per_category": {"type": "array", "description": "Sum of urgencies of alerts, validated, closed, or rejected, per category and grouped by UTC day.", "items": {"type": "object", "additionalProperties": {"type": "number"}}}, "ari": {"type": "array", "description": "Alert Risk Indicator (ARI) of each category for each UTC day of the requested time frame.", "items": {"type": "object", "additionalProperties": {"type": "number"}}}, "ari_max": {"type": "array", "description": "Alert Risk Indicator (ARI) for each UTC day of the requested time frame.", "items": {"type": "number"}}, "total_per_status": {"type": "array", "description": "Number of alerts per status grouped by UTC day.", "items": {"type": "object", "additionalProperties": {"type": "number"}}}, "total_per_urgency": {"type": "array", "description": "Number of alerts per urgency bracket grouped by UTC day.", "items": {"type": "object", "additionalProperties": {"type": "number"}}}}, "required": ["ari", "ari_max", "labels", "total", "total_per_category", "total_per_status", "urgency_per_category"]}, "entity_uuid": {"type": "string", "format": "uuid", "description": "UUID of the entity."}, "entity_name": {"type": "string", "description": "Name of the entity."}}, "required": ["counters", "datasets", "entity_name", "entity_uuid", "kris"]}}}, "required": ["items", "total"]}, "AlertCountersPerEntitiesSchema": {"type": "object", "properties": {"total": {"type": "integer", "description": "Number of entities conforming to the `entity_name`, `entity_uuid`, and `created_at` parameters."}, "items": {"type": "array", "description": "Slice of the full list of counters per entities as defined by the `sort`, `direction`, `offset`, and `limit` parameters.", "items": {"type": "object", "properties": {"total": {"type": "integer", "description": "Number of alerts received during the requested time frame."}, "total_per_category": {"type": "object", "description": "Number of alerts received during the requested time frame grouped by category.", "additionalProperties": {"type": "integer"}}, "urgency_per_category": {"type": "object", "description": "Sum of urgencies of alerts, validated, closed, or rejected, received during the requested time frame grouped by category.", "additionalProperties": {"type": "number"}}, "total_per_status": {"type": "object", "description": "Number of alerts received during the requested time frame grouped by status.", "additionalProperties": {"type": "integer"}}, "total_per_urgency": {"type": "object", "description": "Number of alerts received during the requested time frame grouped by urgency bracket.", "additionalProperties": {"type": "integer"}}, "entity_uuid": {"type": "string", "format": "uuid", "description": "UUID of the entity."}, "entity_name": {"type": "string", "description": "Name of the entity."}}, "required": ["entity_name", "entity_uuid", "total", "total_per_category", "total_per_status", "urgency_per_category"]}}}, "required": ["items", "total"]}, "AlertCountersPerAssetsSchema": {"type": "object", "properties": {"total": {"type": "integer", "description": "Number of assets conforming to the `asset_name`, `asset_uuid`, and `created_at` parameters."}, "items": {"type": "array", "description": "Slice of the full list of counters per assets as defined by the `sort`, `direction`, `offset`, and `limit` parameters.", "items": {"type": "object", "properties": {"total": {"type": "integer", "description": "Number of alerts received during the requested time frame."}, "total_per_category": {"type": "object", "description": "Number of alerts received during the requested time frame grouped by category.", "additionalProperties": {"type": "integer"}}, "urgency_per_category": {"type": "object", "description": "Sum of urgencies of alerts, validated, closed, or rejected, received during the requested time frame grouped by category.", "additionalProperties": {"type": "number"}}, "asset_uuid": {"type": "string", "format": "uuid", "description": "UUID of the asset."}}, "required": ["asset_uuid", "total", "total_per_category", "urgency_per_category"]}}}, "required": ["items", "total"]}, "AlertThreatsCounterSchema": {"type": "object", "properties": {"total": {"type": "integer", "description": "Number of returned elements"}, "items": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "string", "description": "Unique identifier of the TTP."}, "type": {"type": "string", "description": "Type of TTP (could be \u201cmalware\u201d, \u201ctool\u201d or \u201cattack-pattern\u201d."}, "name": {"type": "string", "description": "Name of the threat"}, "count": {"type": "integer", "description": "Number of occurrence of that TTP"}}, "required": ["count", "id", "name", "type"]}}}, "required": ["total"]}, "SOCKPIsSchema": {"type": "object", "properties": {"mean_time_to_ingest": {"type": "integer", "description": "Mean time to ingest (in seconds)"}, "mean_time_to_detect": {"type": "integer", "description": "Mean time to detect (in seconds)"}, "mean_time_to_acknowledge": {"type": "integer", "description": "Mean time to acknowledge (in seconds)"}, "mean_time_to_respond": {"type": "integer", "description": "Mean time to respond (in seconds)"}, "mean_time_to_resolve": {"type": "integer", "description": "Mean time to resolve (in seconds)"}}}, "EventStatsSchema": {"type": "object", "properties": {"counters": {"type": "object", "properties": {"total": {"type": "integer", "description": "Number of collected events"}, "total_per_format": {"type": "object", "description": "Number of collected events grouped per format", "additionalProperties": {"type": "integer"}}, "valid": {"type": "integer", "description": "Number of valid collected events"}, "invalid": {"type": "integer", "description": "Number of invalid collected events"}, "valid_per_format": {"type": "object", "description": "Number of valid collected events grouped per format", "additionalProperties": {"type": "integer"}}, "invalid_per_format": {"type": "object", "description": "Number of invalid collected events grouped per format", "additionalProperties": {"type": "integer"}}}, "required": ["invalid", "invalid_per_format", "total", "total_per_format", "valid", "valid_per_format"]}, "datasets": {"type": "object", "properties": {"labels": {"type": "array", "description": "Labels of each entry of the datasets", "items": {"type": "string"}}, "total": {"type": "array", "description": "Number of collected events grouped by day", "items": {"type": "integer"}}, "total_per_format": {"type": "array", "description": "Number of collected events grouped per format and day", "items": {"type": "object", "additionalProperties": {"type": "integer"}}}, "valid": {"type": "array", "description": "Number of valid collected events grouped by day", "items": {"type": "integer"}}, "invalid": {"type": "array", "description": "Number of invalid collected events grouped by day", "items": {"type": "integer"}}, "valid_per_format": {"type": "array", "description": "Number of valid collected events grouped per format and day", "items": {"type": "object", "additionalProperties": {"type": "integer"}}}, "invalid_per_format": {"type": "array", "description": "Number of invalid collected events grouped per format and day", "items": {"type": "object", "additionalProperties": {"type": "integer"}}}}, "required": ["invalid", "invalid_per_format", "labels", "total", "total_per_format", "valid", "valid_per_format"]}}, "required": ["counters", "datasets"]}, "EventCountersSchema": {"type": "object", "properties": {"total": {"type": "integer", "description": "Number of collected events"}, "total_per_format": {"type": "object", "description": "Number of collected events grouped per format", "additionalProperties": {"type": "integer"}}, "valid": {"type": "integer", "description": "Number of valid collected events"}, "invalid": {"type": "integer", "description": "Number of invalid collected events"}, "valid_per_format": {"type": "object", "description": "Number of valid collected events grouped per format", "additionalProperties": {"type": "integer"}}, "invalid_per_format": {"type": "object", "description": "Number of invalid collected events grouped per format", "additionalProperties": {"type": "integer"}}}, "required": ["invalid", "invalid_per_format", "total", "total_per_format", "valid", "valid_per_format"]}, "EventStatsPerEntitiesSchema": {"type": "object", "properties": {"total": {"type": "integer"}, "items": {"type": "array", "items": {"type": "object", "properties": {"counters": {"type": "object", "properties": {"total": {"type": "integer", "description": "Number of collected events"}, "total_per_format": {"type": "object", "description": "Number of collected events grouped per format", "additionalProperties": {"type": "integer"}}, "valid": {"type": "integer", "description": "Number of valid collected events"}, "invalid": {"type": "integer", "description": "Number of invalid collected events"}, "valid_per_format": {"type": "object", "description": "Number of valid collected events grouped per format", "additionalProperties": {"type": "integer"}}, "invalid_per_format": {"type": "object", "description": "Number of invalid collected events grouped per format", "additionalProperties": {"type": "integer"}}}, "required": ["invalid", "invalid_per_format", "total", "total_per_format", "valid", "valid_per_format"]}, "datasets": {"type": "object", "properties": {"labels": {"type": "array", "description": "Labels of each entry of the datasets", "items": {"type": "string"}}, "total": {"type": "array", "description": "Number of collected events grouped by day", "items": {"type": "integer"}}, "total_per_format": {"type": "array", "description": "Number of collected events grouped per format and day", "items": {"type": "object", "additionalProperties": {"type": "integer"}}}, "valid": {"type": "array", "description": "Number of valid collected events grouped by day", "items": {"type": "integer"}}, "invalid": {"type": "array", "description": "Number of invalid collected events grouped by day", "items": {"type": "integer"}}, "valid_per_format": {"type": "array", "description": "Number of valid collected events grouped per format and day", "items": {"type": "object", "additionalProperties": {"type": "integer"}}}, "invalid_per_format": {"type": "array", "description": "Number of invalid collected events grouped per format and day", "items": {"type": "object", "additionalProperties": {"type": "integer"}}}}, "required": ["invalid", "invalid_per_format", "labels", "total", "total_per_format", "valid", "valid_per_format"]}, "entity_uuid": {"type": "string", "format": "uuid"}, "entity_name": {"type": "string"}}, "required": ["counters", "datasets", "entity_name", "entity_uuid"]}}}, "required": ["items", "total"]}, "EventCountersPerEntitiesSchema": {"type": "object", "properties": {"total": {"type": "integer"}, "items": {"type": "array", "items": {"type": "object", "properties": {"total": {"type": "integer", "description": "Number of collected events"}, "total_per_format": {"type": "object", "description": "Number of collected events grouped per format", "additionalProperties": {"type": "integer"}}, "valid": {"type": "integer", "description": "Number of valid collected events"}, "invalid": {"type": "integer", "description": "Number of invalid collected events"}, "valid_per_format": {"type": "object", "description": "Number of valid collected events grouped per format", "additionalProperties": {"type": "integer"}}, "invalid_per_format": {"type": "object", "description": "Number of invalid collected events grouped per format", "additionalProperties": {"type": "integer"}}, "entity_uuid": {"type": "string", "format": "uuid"}, "entity_name": {"type": "string"}}, "required": ["entity_name", "entity_uuid", "invalid", "invalid_per_format", "total", "total_per_format", "valid", "valid_per_format"]}}}, "required": ["items", "total"]}, "AlertKillChainsSchema": {"type": "object", "properties": {"items": {"type": "object", "properties": {"order_id": {"type": "integer", "description": "Order identifier of the kill chain step"}, "uuid": {"type": "string", "format": "uuid", "description": "Unique identifier of the kill chain step"}, "short_id": {"type": "string", "description": "Unique short id of the kill chain step"}, "name": {"type": "string", "description": "Name of the kill chain step"}, "description": {"type": "string", "description": "Description of the kill chain step"}, "stix_name": {"type": "string", "description": "The STIXv2 name for this kill chain step"}}}, "total": {"type": "integer"}}}, "AlertKillChainSchema": {"type": "object", "properties": {"order_id": {"type": "integer", "description": "Order identifier of the kill chain step"}, "uuid": {"type": "string", "format": "uuid", "description": "Unique identifier of the kill chain step"}, "short_id": {"type": "string", "description": "Unique short id of the kill chain step"}, "name": {"type": "string", "description": "Name of the kill chain step"}, "description": {"type": "string", "description": "Description of the kill chain step"}, "stix_name": {"type": "string", "description": "The STIXv2 name for this kill chain step"}}}, "CustomStatusSchema": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid"}, "community_uuid": {"type": "string", "format": "uuid"}, "level": {"type": "integer"}, "created_at": {"type": "string", "format": "date-time"}, "created_by": {"type": "string"}, "created_by_type": {"type": "string"}, "updated_at": {"type": "string", "format": "date-time", "x-nullable": true}, "updated_by": {"type": "string", "x-nullable": true}, "updated_by_type": {"type": "string", "x-nullable": true}, "stage": {"enum": ["open", "closed", "in_progress"], "description": "Stage of the custom status"}, "label": {"type": "string"}, "description": {"type": "string"}, "is_used": {"type": "boolean"}}, "required": ["community_uuid", "created_at", "created_by", "created_by_type", "description", "label", "level", "stage", "uuid"]}, "ListCustomStatusesSchema": {"type": "object", "properties": {"items": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid"}, "community_uuid": {"type": "string", "format": "uuid"}, "level": {"type": "integer"}, "created_at": {"type": "string", "format": "date-time"}, "created_by": {"type": "string"}, "created_by_type": {"type": "string"}, "updated_at": {"type": "string", "format": "date-time", "x-nullable": true}, "updated_by": {"type": "string", "x-nullable": true}, "updated_by_type": {"type": "string", "x-nullable": true}, "stage": {"enum": ["open", "closed", "in_progress"], "description": "Stage of the custom status"}, "label": {"type": "string"}, "description": {"type": "string"}, "is_used": {"type": "boolean"}}, "required": ["community_uuid", "created_at", "created_by", "created_by_type", "description", "label", "level", "stage", "uuid"]}}, "total": {"type": "integer"}}, "required": ["items", "total"]}, "CustomVerdictSchema": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid"}, "community_uuid": {"type": "string", "format": "uuid"}, "level": {"type": "integer"}, "created_at": {"type": "string", "format": "date-time"}, "created_by": {"type": "string"}, "created_by_type": {"type": "string"}, "updated_at": {"type": "string", "format": "date-time", "x-nullable": true}, "updated_by": {"type": "string", "x-nullable": true}, "updated_by_type": {"type": "string", "x-nullable": true}, "stage": {"enum": ["false_positive", "true_positive"], "description": "Stage of the custom verdict"}, "label": {"type": "string"}, "description": {"type": "string"}, "is_used": {"type": "boolean"}}, "required": ["community_uuid", "created_at", "created_by", "created_by_type", "description", "label", "level", "stage", "uuid"]}, "ListCustomVerdictsSchema": {"type": "object", "properties": {"items": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid"}, "community_uuid": {"type": "string", "format": "uuid"}, "level": {"type": "integer"}, "created_at": {"type": "string", "format": "date-time"}, "created_by": {"type": "string"}, "created_by_type": {"type": "string"}, "updated_at": {"type": "string", "format": "date-time", "x-nullable": true}, "updated_by": {"type": "string", "x-nullable": true}, "updated_by_type": {"type": "string", "x-nullable": true}, "stage": {"enum": ["false_positive", "true_positive"], "description": "Stage of the custom verdict"}, "label": {"type": "string"}, "description": {"type": "string"}, "is_used": {"type": "boolean"}}, "required": ["community_uuid", "created_at", "created_by", "created_by_type", "description", "label", "level", "stage", "uuid"]}}, "total": {"type": "integer"}}, "required": ["items", "total"]}, "CustomPrioritySchema": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid"}, "community_uuid": {"type": "string", "format": "uuid"}, "level": {"type": "integer"}, "created_at": {"type": "string", "format": "date-time"}, "created_by": {"type": "string"}, "created_by_type": {"type": "string"}, "updated_at": {"type": "string", "format": "date-time", "x-nullable": true}, "updated_by": {"type": "string", "x-nullable": true}, "updated_by_type": {"type": "string", "x-nullable": true}, "color": {"type": "string"}, "label": {"type": "string"}, "description": {"type": "string"}, "is_used": {"type": "boolean"}}, "required": ["color", "community_uuid", "created_at", "created_by", "created_by_type", "description", "label", "level", "uuid"]}, "ListCustomPrioritiesSchema": {"type": "object", "properties": {"items": {"type": "array", "items": {"type": "object", "properties": {"uuid": {"type": "string", "format": "uuid"}, "community_uuid": {"type": "string", "format": "uuid"}, "level": {"type": "integer"}, "created_at": {"type": "string", "format": "date-time"}, "created_by": {"type": "string"}, "created_by_type": {"type": "string"}, "updated_at": {"type": "string", "format": "date-time", "x-nullable": true}, "updated_by": {"type": "string", "x-nullable": true}, "updated_by_type": {"type": "string", "x-nullable": true}, "color": {"type": "string"}, "label": {"type": "string"}, "description": {"type": "string"}, "is_used": {"type": "boolean"}}, "required": ["color", "community_uuid", "created_at", "created_by", "created_by_type", "description", "label", "level", "uuid"]}}, "total": {"type": "integer"}}, "required": ["items", "total"]}}, "responses": {"ParseError": {"description": "When a mask can't be parsed"}, "MaskError": {"description": "When any error occurs on mask"}, "PlatformError": {}}}